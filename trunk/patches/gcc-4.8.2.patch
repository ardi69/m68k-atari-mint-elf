diff -aurN gcc-4.8.2.orig/config-ml.in gcc-4.8.2/config-ml.in
--- gcc-4.8.2.orig/config-ml.in	2011-03-22 19:58:18 +0000
+++ gcc-4.8.2/config-ml.in	2014-02-19 20:35:48 +0000
@@ -338,6 +338,23 @@
 	    esac
 	  done
 	fi
+	case "${host}" in
+	  *-*-mint*)
+	    case "${srcdir}" in
+	      */libgcc ) : ;;
+	      *)
+	        old_multidirs="${multidirs}"
+	        multidirs=""
+	        for x in ${old_multidirs}; do
+		  case "$x" in
+		    *mshort ) : ;;
+		    *) multidirs="${multidirs} ${x}" ;;
+		  esac
+		done
+		;;
+	    esac
+	    ;;
+	esac
 	;;
 mips*-*-*)
 	if [ x$enable_single_float = xno ]
diff -aurN gcc-4.8.2.orig/config.guess gcc-4.8.2/config.guess
--- gcc-4.8.2.orig/config.guess	2013-01-08 22:46:38 +0000
+++ gcc-4.8.2/config.guess	2014-02-19 20:48:13 +0000
@@ -398,22 +398,22 @@
     # MiNT.  But MiNT is downward compatible to TOS, so this should
     # be no problem.
     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint
 	exit ;;
     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint
 	exit ;;
     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint
 	exit ;;
     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
-	echo m68k-milan-mint${UNAME_RELEASE}
+	echo m68k-milan-mint
 	exit ;;
     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
-	echo m68k-hades-mint${UNAME_RELEASE}
+	echo m68k-hades-mint
 	exit ;;
     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
-	echo m68k-unknown-mint${UNAME_RELEASE}
+	echo m68k-unknown-mint
 	exit ;;
     m68k:machten:*:*)
 	echo m68k-apple-machten${UNAME_RELEASE}
diff -aurN gcc-4.8.2.orig/configure gcc-4.8.2/configure
--- gcc-4.8.2.orig/configure	2013-09-03 12:13:42 +0000
+++ gcc-4.8.2/configure	2014-02-19 20:35:49 +0000
@@ -3133,6 +3133,9 @@
     *-*-freebsd*)
         # Enable libmudflap by default in FreeBSD.
 	;;
+    *-*-mint*)
+        # Enable libmudflap by default in MiNT.
+	;;
     *)
         # Disable it by default everywhere else.
 	noconfigdirs="$noconfigdirs target-libmudflap"
@@ -3455,6 +3458,9 @@
   m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
     libgloss_dir=m68hc11
     ;;
+  m68k-*-mint*)
+    noconfigdirs="$noconfigdirs target-libiberty ${libgcj}"
+    ;;
   m68*-*-* | fido-*-*)
     libgloss_dir=m68k
     ;;
diff -aurN gcc-4.8.2.orig/configure.ac gcc-4.8.2/configure.ac
--- gcc-4.8.2.orig/configure.ac	2013-09-03 12:13:42 +0000
+++ gcc-4.8.2/configure.ac	2014-02-19 20:35:49 +0000
@@ -481,6 +481,9 @@
     *-*-freebsd*)
         # Enable libmudflap by default in FreeBSD.
 	;;
+    *-*-mint*)
+        # Enable libmudflap by default in MiNT.
+	;;
     *)
         # Disable it by default everywhere else.
 	noconfigdirs="$noconfigdirs target-libmudflap"
@@ -794,6 +797,9 @@
   m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
     libgloss_dir=m68hc11
     ;;
+  m68k-*-mint*)
+    noconfigdirs="$noconfigdirs target-libiberty ${libgcj}"
+    ;;
   m68*-*-* | fido-*-*)
     libgloss_dir=m68k
     ;;
diff -aurN gcc-4.8.2.orig/gcc/config/m68k/m68k.h gcc-4.8.2/gcc/config/m68k/m68k.h
--- gcc-4.8.2.orig/gcc/config/m68k/m68k.h	2013-01-10 20:38:27 +0000
+++ gcc-4.8.2/gcc/config/m68k/m68k.h	2014-02-19 20:40:46 +0000
@@ -130,7 +130,10 @@
 	}								\
 									\
       if (TARGET_68881)							\
-	builtin_define ("__HAVE_68881__");				\
+	{								\
+	  builtin_define ("__HAVE_68881__");				\
+	  builtin_define ("__M68881__"); /* Non-standard */		\
+	}								\
 									\
       if (TARGET_COLDFIRE)						\
 	{								\
diff -aurN gcc-4.8.2.orig/gcc/c/c-decl.c gcc-4.8.2/gcc/c/c-decl.c
--- gcc-4.8.2.orig/gcc/c/c-decl.c	2013-01-10 20:38:27 +0000
+++ gcc-4.8.2/gcc/c/c-decl.c	2014-03-06 23:00:13 +0000
@@ -4132,13 +4132,17 @@
 	ce = declarator->declarator;
       if (ce->kind == cdk_function)
 	{
+		bool mshort=false;
+		if (lookup_attribute ("mshort_call", attributes))
+			mshort = true;
+
 	  tree args = ce->u.arg_info->parms;
 	  for (; args; args = DECL_CHAIN (args))
 	    {
 	      tree type = TREE_TYPE (args);
 	      if (type && INTEGRAL_TYPE_P (type)
-		  && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node))
-		DECL_ARG_TYPE (args) = integer_type_node;
+		  && TYPE_PRECISION (type) < TYPE_PRECISION (mshort ? short_integer_type_node : integer_type_node))
+		DECL_ARG_TYPE (args) = mshort ? short_integer_type_node : integer_type_node;
 	    }
 	}
     }
@@ -8341,12 +8345,17 @@
       && targetm.calls.promote_prototypes (TREE_TYPE (fndecl)))
     {
       tree args = DECL_ARGUMENTS (fndecl);
+
+		bool mshort=false;
+		if (lookup_attribute ("mshort_call", DECL_ATTRIBUTES (fndecl)))
+			mshort = true;
+
       for (; args; args = DECL_CHAIN (args))
 	{
 	  tree type = TREE_TYPE (args);
 	  if (INTEGRAL_TYPE_P (type)
-	      && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node))
-	    DECL_ARG_TYPE (args) = integer_type_node;
+		  && TYPE_PRECISION (type) < TYPE_PRECISION (mshort ? short_integer_type_node : integer_type_node))
+		DECL_ARG_TYPE (args) = mshort ? short_integer_type_node : integer_type_node;
 	}
     }
 
--- gcc-4.8.2.orig/gcc/c/c-typeck.c	2013-01-24 16:59:44 +0000
+++ gcc-4.8.2/gcc/c/c-typeck.c	2014-03-11 20:53:58 +0000
@@ -2884,9 +2884,36 @@
    failure.  */
 
 static int
+orig_convert_arguments (tree typelist, vec<tree, va_gc> *values,
+		   vec<tree, va_gc> *origtypes, tree function, tree fundecl);
+static int
 convert_arguments (tree typelist, vec<tree, va_gc> *values,
 		   vec<tree, va_gc> *origtypes, tree function, tree fundecl)
 {
+  bool mshort=false;
+  if (fundecl && TREE_CODE (fundecl) == FUNCTION_DECL && lookup_attribute ("mshort_call", DECL_ATTRIBUTES (fundecl)))
+    mshort = true;
+
+  tree orig_integer_type_node = integer_type_node;
+  tree orig_unsigned_type_node = unsigned_type_node;
+  if(mshort) {
+    integer_type_node = short_integer_type_node;
+    unsigned_type_node = short_unsigned_type_node;
+  }
+
+  int ret = orig_convert_arguments (typelist, values, origtypes, function, fundecl);
+
+  if(mshort) {
+    integer_type_node = orig_integer_type_node;
+    unsigned_type_node = orig_unsigned_type_node;
+  }
+  return ret;
+}
+static int
+orig_convert_arguments (tree typelist, vec<tree, va_gc> *values,
+		   vec<tree, va_gc> *origtypes, tree function, tree fundecl)
+{
+
   tree typetail, val;
   unsigned int parmnum;
   bool error_args = false;
--- gcc-4.8.2.orig/gcc/calls.c	2013-01-11 23:39:18 +0000
+++ gcc-4.8.2/gcc/calls.c	2014-03-11 20:54:14 +0000
@@ -2186,9 +2186,31 @@
    If the value is stored in TARGET then TARGET is returned.
    If IGNORE is nonzero, then we ignore the value of the function call.  */
 
+static rtx
+orig_expand_call (tree exp, rtx target, int ignore);
 rtx
 expand_call (tree exp, rtx target, int ignore)
 {
+  tree fndecl = get_callee_fndecl (exp);
+  if (!fndecl) fndecl = TREE_TYPE (CALL_EXPR_FN (exp));
+    tree slb_export = lookup_attribute ("slb_export", DECL_ATTRIBUTES (fndecl));
+  bool mshort_call=false;
+  if (TREE_CODE (fndecl) == FUNCTION_DECL && lookup_attribute ("mshort_call", DECL_ATTRIBUTES (fndecl)))
+    mshort_call = true;
+
+  if (mshort_call)
+    target_flags ^= MASK_SHORT;
+
+  rtx ret = orig_expand_call (exp, target, ignore);
+
+  if (mshort_call)
+    target_flags ^= MASK_SHORT;
+  return ret;
+}
+
+static rtx
+orig_expand_call (tree exp, rtx target, int ignore)
+{
   /* Nonzero if we are currently expanding a call.  */
   static int currently_expanding_call = 0;
 
--- gcc-4.8.2.orig/gcc/config/m68k/m68k.c	2013-01-10 20:38:27 +0000
+++ gcc-4.8.2/gcc/config/m68k/m68k.c	2014-03-16 19:41:07 +0000
@@ -315,6 +315,10 @@
     m68k_handle_fndecl_attribute, false },
   { "interrupt_thread", 0, 0, true,  false, false,
     m68k_handle_fndecl_attribute, false },
+  { "mshort_call", 0, 0, true,  false, false,
+    m68k_handle_fndecl_attribute, false },
+  { "slb_export", 1, 1, true,  false, false,
+    m68k_handle_fndecl_attribute, false },
   { NULL,                0, 0, false, false, false, NULL, false }
 };
 
@@ -713,6 +717,10 @@
   if (a != NULL_TREE)
     return m68k_fk_interrupt_thread;
 
+  a = lookup_attribute ("mshort_call", DECL_ATTRIBUTES (func));
+  if (a != NULL_TREE)
+    return m68k_fk_mshort_call;
+
   return m68k_fk_normal_function;
 }
 
@@ -731,7 +739,27 @@
       *no_add_attrs = true;
     }
 
-  if (m68k_get_function_kind (*node) != m68k_fk_normal_function)
+  if (!strcmp (IDENTIFIER_POINTER (name), "slb_export")) {
+    if(TREE_CODE (TREE_TYPE (*node)) == FUNCTION_TYPE && decl_function_context (*node) == 0) {
+      tree arg;
+      arg = TREE_VALUE (args);
+      if(TREE_CODE(arg) != INTEGER_CST) {
+        warning (OPT_Wattributes, "%qE invalid slb_export slot (must be an integer beetween 0 and 127) --> attribute ignored", name);
+        *no_add_attrs = true;
+      } else {
+        HOST_WIDE_INT val = int_cst_value(arg);
+        if ( 0 > val || val > 127) {
+          warning (OPT_Wattributes, "%qE invalid slb_export slot (get %i but must be beetween 0 and 127) --> attribute ignored", name, val);
+          *no_add_attrs = true;
+        }
+      }
+    } else {
+      warning (OPT_Wattributes, "%qE attribute ignored", name);
+      *no_add_attrs = true;
+    }
+    return NULL_TREE;
+  }
+  if (m68k_get_function_kind (*node) != m68k_fk_normal_function && m68k_get_function_kind (*node) != m68k_fk_mshort_call)
     {
       error ("multiple interrupt attributes not allowed");
       *no_add_attrs = true;
@@ -743,10 +771,72 @@
       error ("interrupt_thread is available only on fido");
       *no_add_attrs = true;
     }
-
+  if (PARM_BOUNDARY == 16 && !strcmp (IDENTIFIER_POINTER (name), "mshort_call"))
+    {
+     // silent ignored warning (OPT_Wattributes, "mshort_call is not available with -mshort");
+      *no_add_attrs = true;
+    }
   return NULL_TREE;
 }
+static HOST_WIDE_INT
+m68k_get_slb_export_slot(tree fndecl) {
+  tree slb_export = lookup_attribute ("slb_export", DECL_ATTRIBUTES (fndecl));
+  if(slb_export) {
+    return int_cst_value (TREE_VALUE(TREE_VALUE(slb_export)));
+  }
+  return -1;
+}
+
+static char m68k_slb_export_tab[128];
+static int m68k_slb_export_tab_valid=0;
+
+void
+m68k_finish_slb_export ()
+{
+  char buf[32];
+  bool dummies = false;
+  if(!m68k_slb_export_tab_valid)
+    return;
+  m68k_slb_export_tab_valid = 0;
+  for(int slot=127; slot>=0; --slot) {
+    if(m68k_slb_export_tab[slot])
+      dummies = true;	 
+    if(!m68k_slb_export_tab[slot] && dummies) {
+      sprintf (buf, "%s.%.3u", ".gnu.linkonce.slb_export", (unsigned)slot);
+      switch_to_section (get_section (buf, SECTION_WRITE, NULL));
+      assemble_align (POINTER_SIZE);
+      sprintf (buf, "%s_%.3u", ".slb_export", (unsigned)slot);
+      fprintf (asm_out_file, "\t.weak %s\n\t.long %s\n", buf, buf);
+    }
+  }
+}
+
+void
+m68k_compute_slb_export (tree fndecl)
+{
+  char section[32], label[32];
 
+  rtx symbol = XEXP (DECL_RTL (fndecl), 0);
+  const char *name = XSTR (symbol, 0);
+
+  HOST_WIDE_INT slot = m68k_get_slb_export_slot(fndecl);
+  if(slot<0) return;
+
+  if(!m68k_slb_export_tab_valid) memset(m68k_slb_export_tab, 0, sizeof(m68k_slb_export_tab));
+  m68k_slb_export_tab_valid = m68k_slb_export_tab[slot] = 1;
+
+  /* ??? This only works reliably with the GNU linker.  */
+  sprintf (section, "%s.%.3u", ".gnu.linkonce.slb_export", (unsigned)slot);
+  sprintf (label, "%s_%.3u", ".slb_export", (unsigned)slot);
+
+  fprintf (asm_out_file, "\t.globl %s\n\t.set %s, ", label, label);
+  assemble_name(asm_out_file, name);
+  fputc ('\n', asm_out_file);
+
+  switch_to_section (get_section (section, SECTION_WRITE, NULL));
+  assemble_align (POINTER_SIZE);
+  fprintf (asm_out_file, "\t.long %s\n", label);
+}
 static void
 m68k_compute_frame_layout (void)
 {
diff -aurN gcc-4.8.2.orig/gcc/config/m68k/m68k.h gcc-4.8.2/gcc/config/m68k/m68k.h
--- gcc-4.8.2.orig/gcc/config/m68k/m68k.h	2013-01-10 20:38:27 +0000
+++ gcc-4.8.2/gcc/config/m68k/m68k.h	2014-03-08 17:12:39 +0000
@@ -130,7 +130,10 @@
 	}								\
 									\
       if (TARGET_68881)							\
-	builtin_define ("__HAVE_68881__");				\
+	{								\
+	  builtin_define ("__HAVE_68881__");				\
+	  builtin_define ("__M68881__"); /* Non-standard */		\
+	}								\
 									\
       if (TARGET_COLDFIRE)						\
 	{								\
@@ -946,7 +949,8 @@
 {
   m68k_fk_normal_function,
   m68k_fk_interrupt_handler,
-  m68k_fk_interrupt_thread
+  m68k_fk_interrupt_thread,
+  m68k_fk_mshort_call
 };
 
 /* Variables in m68k.c; see there for details.  */
@@ -977,4 +981,7 @@
 extern int m68k_sched_address_bypass_p (rtx, rtx);
 extern int m68k_sched_indexed_address_bypass_p (rtx, rtx);
 
+extern void m68k_compute_slb_export (tree fndecl);
+extern void m68k_finish_slb_export ();
+
 #define CPU_UNITS_QUERY 1
diff -aurN gcc-4.8.2.orig/gcc/config/m68k/m68k.opt gcc-4.8.2/gcc/config/m68k/m68k.opt
--- gcc-4.8.2.orig/gcc/config/m68k/m68k.opt	2013-01-10 20:38:27 +0000
+++ gcc-4.8.2/gcc/config/m68k/m68k.opt	2014-03-16 11:56:48 +0000
@@ -193,3 +193,11 @@
 mxtls
 Target Report Mask(XTLS)
 Support TLS segment larger than 64K
+
+slb
+Target 
+create a shared library (dummy -> currently without effect)
+
+cmini
+Target 
+link with libcmini instead with libc
diff -aurN gcc-4.8.2.orig/gcc/config/m68k/math-68881.h gcc-4.8.2/gcc/config/m68k/math-68881.h
--- gcc-4.8.2.orig/gcc/config/m68k/math-68881.h	2004-02-09 00:48:13 +0000
+++ gcc-4.8.2/gcc/config/m68k/math-68881.h	2014-02-19 20:40:46 +0000
@@ -44,6 +44,16 @@
 
 #include <errno.h>
 
+/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
+   inline semantics, unless -fgnu89-inline is used.  */
+#ifdef __cplusplus
+# define __MATH_68881_INLINE inline
+#elif defined __GNUC_STDC_INLINE__
+# define __MATH_68881_INLINE extern __inline __attribute__ ((__gnu_inline__))
+#else
+# define __MATH_68881_INLINE extern __inline
+#endif
+
 #undef HUGE_VAL
 #ifdef __sun__
 /* The Sun assembler fails to handle the hex constant in the usual defn.  */
@@ -64,7 +74,7 @@
 })
 #endif
 
-__inline extern double
+__MATH_68881_INLINE double
 sin (double x)
 {
   double value;
@@ -75,7 +85,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 cos (double x)
 {
   double value;
@@ -86,7 +96,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 tan (double x)
 {
   double value;
@@ -97,7 +107,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 asin (double x)
 {
   double value;
@@ -108,7 +118,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 acos (double x)
 {
   double value;
@@ -119,7 +129,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atan (double x)
 {
   double value;
@@ -130,7 +140,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atan2 (double y, double x)
 {
   double pi, pi_over_2;
@@ -187,7 +197,7 @@
     }
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 sinh (double x)
 {
   double value;
@@ -198,7 +208,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 cosh (double x)
 {
   double value;
@@ -209,7 +219,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 tanh (double x)
 {
   double value;
@@ -220,7 +230,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atanh (double x)
 {
   double value;
@@ -231,7 +241,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 exp (double x)
 {
   double value;
@@ -242,7 +252,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 expm1 (double x)
 {
   double value;
@@ -253,7 +263,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log (double x)
 {
   double value;
@@ -264,7 +274,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log1p (double x)
 {
   double value;
@@ -275,7 +285,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log10 (double x)
 {
   double value;
@@ -286,7 +296,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 sqrt (double x)
 {
   double value;
@@ -297,13 +307,13 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 hypot (double x, double y)
 {
   return sqrt (x*x + y*y);
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 pow (double x, double y)
 {
   if (x > 0)
@@ -352,7 +362,7 @@
     }
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 fabs (double x)
 {
   double value;
@@ -363,7 +373,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 ceil (double x)
 {
   int rounding_mode, round_up;
@@ -385,7 +395,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 floor (double x)
 {
   int rounding_mode, round_down;
@@ -408,7 +418,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 rint (double x)
 {
   int rounding_mode, round_nearest;
@@ -430,7 +440,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 fmod (double x, double y)
 {
   double value;
@@ -442,7 +452,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 drem (double x, double y)
 {
   double value;
@@ -454,7 +464,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 scalb (double x, int n)
 {
   double value;
@@ -466,7 +476,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 logb (double x)
 {
   double exponent;
@@ -477,7 +487,7 @@
   return exponent;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 ldexp (double x, int n)
 {
   double value;
@@ -489,7 +499,7 @@
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 frexp (double x, int *exp)
 {
   double float_exponent;
@@ -514,7 +524,7 @@
   return mantissa;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 modf (double x, double *ip)
 {
   double temp;
diff -aurN gcc-4.8.2.orig/gcc/config/m68k/mint.h gcc-4.8.2/gcc/config/m68k/mint.h
--- gcc-4.8.2.orig/gcc/config/m68k/mint.h	1970-01-01 00:00:00 +0000
+++ gcc-4.8.2/gcc/config/m68k/mint.h	2014-02-19 20:40:46 +0000
@@ -0,0 +1,188 @@
+/* Definitions of target machine for GNU compiler.
+   Atari ST TOS/MiNT.
+   Copyright (C) 1994, 1995, 2007, 2008, 2009, 2010, 2011
+   Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http:/www.gnu.org/licenses/>.  */
+
+/* Here are four prefixes that are used by asm_fprintf to
+   facilitate customization for alternate assembler syntaxes.
+   Machines with no likelihood of an alternate syntax need not
+   define these and need not use asm_fprintf.  */
+
+/* The prefix for register names.  Note that REGISTER_NAMES
+   is supposed to include this prefix. Also note that this is NOT an
+   fprintf format string, it is a literal string */
+
+#undef REGISTER_PREFIX
+#define REGISTER_PREFIX "%"
+
+/* The prefix for local (compiler generated) labels.
+   These labels will not appear in the symbol table.  */
+
+#undef LOCAL_LABEL_PREFIX
+#define LOCAL_LABEL_PREFIX "."
+
+/* The prefix to add to user-visible assembler symbols.  */
+
+#undef USER_LABEL_PREFIX
+#define USER_LABEL_PREFIX "_"
+
+#undef ASM_COMMENT_START
+#define ASM_COMMENT_START "|"
+
+#undef WCHAR_TYPE
+#define WCHAR_TYPE "short unsigned int"
+
+#undef WCHAR_TYPE_SIZE
+#define WCHAR_TYPE_SIZE SHORT_TYPE_SIZE
+
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()		\
+  do						\
+    {						\
+      builtin_define ("__MINT__");		\
+      builtin_define_std ("atarist");		\
+      builtin_assert ("machine=atari");		\
+      builtin_assert ("system=mint");		\
+    }						\
+  while (0)
+
+#undef TARGET_OBJFMT_CPP_BUILTINS
+#define TARGET_OBJFMT_CPP_BUILTINS() do { builtin_define ("__ELF__"); } while (0)
+/* The following defines are nonstandard
+   and are kept only for compatibility
+   with older versions of GCC for MiNT.  */
+
+#undef CPP_SPEC
+#define CPP_SPEC			\
+  "%{m68000:-D__M68000__} "		\
+  "%{mc68020:-D__M68020__} "		\
+  "%{m68020:-D__M68020__} "		\
+  "%{m68030:-D__M68020__} "		\
+  "%{m68040:-D__M68020__} "		\
+  "%{m68060:-D__M68020__} "		\
+  "%{m68020-40:-D__M68020__} "		\
+  "%{m68020-60:-D__M68020__} "		\
+  "%{!m680*:%{!mc680*:-D__M68000__}} "	\
+  "%{mshort:-D__MSHORT__}"
+
+#define STARTFILE_SPEC	"%{pg|p|profile:gcrt0.o%s;:crt0.o%s}"
+#define LIB_SPEC	"%{cmini:-lcmini;:-lc}"
+
+/* Every structure or union's size must be a multiple of 2 bytes.  */
+#define STRUCTURE_SIZE_BOUNDARY 16
+
+/* The -g option generates stabs debug information.  */
+#define DBX_DEBUGGING_INFO 1
+
+/* This is the assembler directive to equate two values.  */
+#undef SET_ASM_OP
+#define SET_ASM_OP		"\t.set\t"
+
+/* This is how we tell the assembler that a symbol is weak.  */
+#undef ASM_WEAKEN_LABEL
+#define ASM_WEAKEN_LABEL(FILE,NAME) \
+  do { fputs ("\t.weak\t", FILE); assemble_name (FILE, NAME); \
+       fputc ('\n', FILE); } while (0)
+
+/* Don't default to pcc-struct-return, because gcc is the only compiler, and
+   we want to retain compatibility with older gcc versions.  */
+#define DEFAULT_PCC_STRUCT_RETURN 0
+
+/* The system headers are C++-aware.  */
+#define NO_IMPLICIT_EXTERN_C
+
+/* By default, the vtable entries are void pointers, the so the alignment
+   is the same as pointer alignment.  The value of this macro specifies
+   the alignment of the vtable entry in bits.  It should be defined only
+   when special alignment is necessary.
+
+   MiNT: The default value of 32 is too much and unsupported by a.out-mintprg.
+*/
+#define TARGET_VTABLE_ENTRY_ALIGN 16
+
+/* If we have a definition of INCOMING_RETURN_ADDR_RTX, assume that
+   the rest of the DWARF 2 frame unwind support is also provided.
+   
+   MiNT: DWARF 2 frame unwind is not supported by a.out-mint.
+*/
+#define DWARF2_UNWIND_INFO 0
+
+/* Switch into a generic section.  */
+#define TARGET_ASM_NAMED_SECTION  default_elf_asm_named_section
+#define JUMP_TABLES_IN_TEXT_SECTION 1
+#undef LINK_SPEC
+#define LINK_SPEC "-q"
+
+/* config/m68k.md has an explicit reference to the program counter,
+   prefix this by the register prefix.  */
+
+#define ASM_RETURN_CASE_JUMP				\
+  do {							\
+    if (TARGET_COLDFIRE)				\
+      {							\
+	if (ADDRESS_REG_P (operands[0]))		\
+	  return "jmp %%pc@(2,%0:l)";			\
+	else						\
+	  return "ext%.l %0\n\tjmp %%pc@(2,%0:l)";	\
+      }							\
+    else						\
+      return "jmp %%pc@(2,%0:w)";			\
+  } while (0)
+
+/* The ADDR_DIFF_VEC must exactly follow the previous instruction.  */
+
+#undef ADDR_VEC_ALIGN
+#define ADDR_VEC_ALIGN(ADDR_VEC) 0
+
+/* If defined, a C expression whose value is a string containing the
+   assembler operation to identify the following data as uninitialized global
+   data.  */
+
+#define BSS_SECTION_ASM_OP "\t.bss"
+
+/* A C statement (sans semicolon) to output to the stdio stream
+   FILE the assembler definition of uninitialized global DECL named
+   NAME whose size is SIZE bytes and alignment is ALIGN bytes.
+   Try to use asm_output_aligned_bss to implement this macro.  */
+
+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \
+  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)
+
+/* Disable -fpic and -fPIC since bsr.l _label@PLTPC
+   is unsupported by the assembler.  */
+
+#undef  SUBTARGET_OVERRIDE_OPTIONS
+#define SUBTARGET_OVERRIDE_OPTIONS					\
+do {									\
+  if (flag_pic && !TARGET_PCREL)					\
+      error ("-f%s is not supported on this target",			\
+	       (flag_pic > 1) ? "PIC" : "pic");				\
+} while (0)
+
+/* Workaround for GCC bug #35067 about multiple thunks.  */
+
+#undef MAKE_DECL_ONE_ONLY
+#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)
+
+/* Avoid requiring -static with -fmudflap like in config/bfin/uclinux.h */
+#define MFWRAP_SPEC " %{fmudflap|fmudflapth: \
+ --wrap=malloc --wrap=free --wrap=calloc --wrap=realloc\
+ --wrap=mmap --wrap=munmap --wrap=alloca\
+ %{fmudflapth: --wrap=pthread_create\
+}} %{fmudflap|fmudflapth: --wrap=main}"
diff -aurN gcc-4.8.2.orig/gcc/config/m68k/t-mint gcc-4.8.2/gcc/config/m68k/t-mint
--- gcc-4.8.2.orig/gcc/config/m68k/t-mint	1970-01-01 00:00:00 +0000
+++ gcc-4.8.2/gcc/config/m68k/t-mint	2014-02-19 20:40:46 +0000
@@ -0,0 +1,41 @@
+# 
+# Use multiple libraries
+# 
+
+MULTILIB_OPTIONS = m68020-60/mcpu=5475 mshort
+
+MULTILIB_DIRNAMES = m68020-60 m5475 mshort
+
+MULTILIB_MATCHES = \
+	m68020-60=m68881 \
+	m68020-60=m68020 \
+	m68020-60=m68020-40 \
+	m68020-60=mc68020 \
+	m68020-60=m68030 \
+	m68020-60=m68040 \
+	m68020-60=m68060 \
+	m68020-60=mcpu?68020 \
+	m68020-60=mcpu?68030 \
+	m68020-60=mcpu?68040 \
+	m68020-60=mcpu?68060 \
+	m68020-60=march?68020 \
+	m68020-60=march?68030 \
+	m68020-60=march?68040 \
+	m68020-60=march?68060 \
+	mcpu?5475=mcfv4e \
+	mcpu?5475=mcpu?5470 \
+	mcpu?5475=mcpu?5471 \
+	mcpu?5475=mcpu?5472 \
+	mcpu?5475=mcpu?5473 \
+	mcpu?5475=mcpu?5474 \
+	mcpu?5475=mcpu?547x \
+	mcpu?5475=mcpu?5480 \
+	mcpu?5475=mcpu?5481 \
+	mcpu?5475=mcpu?5482 \
+	mcpu?5475=mcpu?5483 \
+	mcpu?5475=mcpu?5484 \
+	mcpu?5475=mcpu?5485 \
+	mcpu?5475=mcpu?548x
+
+LIBGCC = stmp-multilib
+INSTALL_LIBGCC = install-multilib
diff -aurN gcc-4.8.2.orig/gcc/config.gcc gcc-4.8.2/gcc/config.gcc
--- gcc-4.8.2.orig/gcc/config.gcc	2013-10-03 00:47:24 +0000
+++ gcc-4.8.2/gcc/config.gcc	2014-02-19 20:35:49 +0000
@@ -1721,6 +1721,15 @@
 	tm_defines="${tm_defines} MOTOROLA=1"
 	tmake_file="${tmake_file} m68k/t-floatlib m68k/t-linux m68k/t-mlibs"
 	;;
+m68k-*-mint*)
+	default_m68k_cpu=68000
+	default_cf_cpu=5475
+	tm_file="${tm_file} m68k/mint.h"
+	tm_defines="${tm_defines} MOTOROLA=1"
+	tmake_file="m68k/t-floatlib m68k/t-mint"
+	gas=yes
+	gnu_ld=yes
+	;;
 m68k-*-rtems*)
 	default_m68k_cpu=68020
 	default_cf_cpu=5206
diff -aurN gcc-4.8.2.orig/gcc/version.c gcc-4.8.2/gcc/version.c
--- gcc-4.8.2.orig/gcc/version.c	2013-01-10 20:38:27 +0000
+++ gcc-4.8.2/gcc/version.c	2014-02-19 21:12:55 +0000
@@ -31,5 +31,5 @@
    BASEVER, DATESTAMP, DEVPHASE, and REVISION are defined by the
    Makefile.  */
 
-const char version_string[] = BASEVER DATESTAMP DEVPHASE REVISION;
+const char version_string[] = BASEVER DATESTAMP DEVPHASE REVISION " (MiNT 20140219)";
 const char pkgversion_string[] = PKGVERSION;
diff -aurN gcc-4.8.2.orig/libdecnumber/decNumberLocal.h gcc-4.8.2/libdecnumber/decNumberLocal.h
--- gcc-4.8.2.orig/libdecnumber/decNumberLocal.h	2013-02-06 22:09:24 +0000
+++ gcc-4.8.2/libdecnumber/decNumberLocal.h	2014-02-19 20:42:11 +0000
@@ -188,7 +188,7 @@
   #if (DECNUMMAXE != DEC_MAX_EMAX)
     #error Maximum exponent mismatch
   #endif
-  #if (DECNUMMINE != DEC_MIN_EMIN)
+  #if !(DECNUMMINE == DEC_MIN_EMIN) /* gcc 2.95.3 has bug in '!=' operator for negative constants */
     #error Minimum exponent mismatch
   #endif
 
diff -aurN gcc-4.8.2.orig/libgcc/config/m68k/lb1sf68.S gcc-4.8.2/libgcc/config/m68k/lb1sf68.S
--- gcc-4.8.2.orig/libgcc/config/m68k/lb1sf68.S	2013-02-04 19:06:20 +0000
+++ gcc-4.8.2/libgcc/config/m68k/lb1sf68.S	2014-02-19 20:40:46 +0000
@@ -666,7 +666,9 @@
 	.globl SYM (__negdf2)
 	.globl SYM (__cmpdf2)
 	.globl SYM (__cmpdf2_internal)
+#ifdef __ELF__
 	.hidden SYM (__cmpdf2_internal)
+#endif
 
 	.text
 	.even
@@ -2581,7 +2583,9 @@
 	.globl SYM (__negsf2)
 	.globl SYM (__cmpsf2)
 	.globl SYM (__cmpsf2_internal)
+#ifdef __ELF__
 	.hidden SYM (__cmpsf2_internal)
+#endif
 
 | These are common routines to return and signal exceptions.	
 
diff -aurN gcc-4.8.2.orig/libgcc/config.host gcc-4.8.2/libgcc/config.host
--- gcc-4.8.2.orig/libgcc/config.host	2013-07-09 21:35:57 +0000
+++ gcc-4.8.2/libgcc/config.host	2014-02-19 20:42:11 +0000
@@ -703,6 +703,9 @@
 	fi
 	md_unwind_header=m68k/linux-unwind.h
 	;;
+m68k-*-mint*)
+	tmake_file="$tmake_file m68k/t-floatlib"
+	;;
 m68k-*-rtems*)
 	tmake_file="$tmake_file m68k/t-floatlib"
 	extra_parts="$extra_parts crti.o crtn.o"
diff -aurN gcc-4.8.2.orig/libiberty/configure gcc-4.8.2/libiberty/configure
--- gcc-4.8.2.orig/libiberty/configure	2012-09-18 16:03:01 +0000
+++ gcc-4.8.2/libiberty/configure	2014-02-19 22:03:42 +0000
@@ -4867,6 +4867,8 @@
 	;;
     i[34567]86-*-cygwin* | i[34567]86-*-mingw* | x86_64-*-mingw*)
 	;;
+    *-*-mint*)
+	;;
     i[34567]86-*-interix[3-9]*)
 	# Interix 3.x gcc -fpic/-fPIC options generate broken code.
 	# Instead, we relocate shared libraries at runtime.
diff -aurN gcc-4.8.2.orig/libiberty/hex.c gcc-4.8.2/libiberty/hex.c
--- gcc-4.8.2.orig/libiberty/hex.c	2007-01-31 20:05:50 +0000
+++ gcc-4.8.2/libiberty/hex.c	2014-02-19 20:42:12 +0000
@@ -24,7 +24,7 @@
 #include "libiberty.h"
 #include "safe-ctype.h" /* for HOST_CHARSET_ASCII */
 
-#if EOF != -1
+#if !(EOF == -1)	/* gcc 2.95.3 has bug in '!=' operator for negative constants */
  #error "hex.c requires EOF == -1"
 #endif
 
diff -aurN gcc-4.8.2.orig/libiberty/safe-ctype.c gcc-4.8.2/libiberty/safe-ctype.c
--- gcc-4.8.2.orig/libiberty/safe-ctype.c	2005-05-10 15:33:18 +0000
+++ gcc-4.8.2/libiberty/safe-ctype.c	2014-02-19 20:42:12 +0000
@@ -119,7 +119,7 @@
 #include <safe-ctype.h>
 #include <stdio.h>  /* for EOF */
 
-#if EOF != -1
+#if !(EOF == -1)	/* gcc 2.95.3 has bug in '!=' operator for negative constants */
  #error "<safe-ctype.h> requires EOF == -1"
 #endif
 
diff -aurN gcc-4.8.2.orig/libmudflap/mf-hooks2.c gcc-4.8.2/libmudflap/mf-hooks2.c
--- gcc-4.8.2.orig/libmudflap/mf-hooks2.c	2013-02-03 17:48:05 +0000
+++ gcc-4.8.2/libmudflap/mf-hooks2.c	2014-02-19 20:42:12 +0000
@@ -1671,6 +1671,8 @@
 }
 
 
+#ifdef HAVE_DLFCN_H
+
 WRAPPER2(void *, dlopen, const char *path, int flags)
 {
   void *p;
@@ -1738,6 +1740,8 @@
   return p;
 }
 
+#endif /* HAVE_DLFCN_H */
+
 
 #if defined (HAVE_SYS_IPC_H) && defined (HAVE_SYS_SEM_H) && defined (HAVE_SYS_SHM_H)
 
diff -aurN gcc-4.8.2.orig/libmudflap/mf-runtime.h gcc-4.8.2/libmudflap/mf-runtime.h
--- gcc-4.8.2.orig/libmudflap/mf-runtime.h	2013-02-03 17:48:05 +0000
+++ gcc-4.8.2/libmudflap/mf-runtime.h	2014-02-19 20:42:12 +0000
@@ -97,6 +97,7 @@
    instrumented modules are meant to be affected.  */
 
 #ifdef _MUDFLAP
+#ifndef __USER_LABEL_PREFIX__
 #pragma redefine_extname memcpy __mfwrap_memcpy
 #pragma redefine_extname memmove __mfwrap_memmove
 #pragma redefine_extname memset __mfwrap_memset
@@ -230,6 +231,141 @@
 #pragma redefine_extname getprotoent __mfwrap_getprotoent
 #pragma redefine_extname getprotobyname __mfwrap_getprotobyname
 #pragma redefine_extname getprotobynumber __mfwrap_getprotobynumber
+#else
+#pragma redefine_extname memcpy ___mfwrap_memcpy
+#pragma redefine_extname memmove ___mfwrap_memmove
+#pragma redefine_extname memset ___mfwrap_memset
+#pragma redefine_extname memcmp ___mfwrap_memcmp
+#pragma redefine_extname memchr ___mfwrap_memchr
+#pragma redefine_extname memrchr ___mfwrap_memrchr
+#pragma redefine_extname strcpy ___mfwrap_strcpy
+#pragma redefine_extname strncpy ___mfwrap_strncpy
+#pragma redefine_extname strcat ___mfwrap_strcat
+#pragma redefine_extname strncat ___mfwrap_strncat
+#pragma redefine_extname strcmp ___mfwrap_strcmp
+#pragma redefine_extname strcasecmp ___mfwrap_strcasecmp
+#pragma redefine_extname strncmp ___mfwrap_strncmp
+#pragma redefine_extname strncasecmp ___mfwrap_strncasecmp
+#pragma redefine_extname strdup ___mfwrap_strdup
+#pragma redefine_extname strndup ___mfwrap_strndup
+#pragma redefine_extname strchr ___mfwrap_strchr
+#pragma redefine_extname strrchr ___mfwrap_strrchr
+#pragma redefine_extname strstr ___mfwrap_strstr
+#pragma redefine_extname memmem ___mfwrap_memmem
+#pragma redefine_extname strlen ___mfwrap_strlen
+#pragma redefine_extname strnlen ___mfwrap_strnlen
+#pragma redefine_extname bzero ___mfwrap_bzero
+#pragma redefine_extname bcopy ___mfwrap_bcopy
+#pragma redefine_extname bcmp ___mfwrap_bcmp
+#pragma redefine_extname index ___mfwrap_index
+#pragma redefine_extname rindex ___mfwrap_rindex
+#pragma redefine_extname asctime ___mfwrap_asctime
+#pragma redefine_extname ctime ___mfwrap_ctime
+#pragma redefine_extname gmtime ___mfwrap_gmtime
+#pragma redefine_extname localtime ___mfwrap_localtime
+#pragma redefine_extname time ___mfwrap_time
+#pragma redefine_extname strerror ___mfwrap_strerror
+#pragma redefine_extname fopen ___mfwrap_fopen
+#pragma redefine_extname fdopen ___mfwrap_fdopen
+#pragma redefine_extname freopen ___mfwrap_freopen
+#pragma redefine_extname fclose ___mfwrap_fclose
+#pragma redefine_extname fread ___mfwrap_fread
+#pragma redefine_extname fwrite ___mfwrap_fwrite
+#pragma redefine_extname fgetc ___mfwrap_fgetc
+#pragma redefine_extname fgets ___mfwrap_fgets
+#pragma redefine_extname getc ___mfwrap_getc
+#pragma redefine_extname gets ___mfwrap_gets
+#pragma redefine_extname ungetc ___mfwrap_ungetc
+#pragma redefine_extname fputc ___mfwrap_fputc
+#pragma redefine_extname fputs ___mfwrap_fputs
+#pragma redefine_extname putc ___mfwrap_putc
+#pragma redefine_extname puts ___mfwrap_puts
+#pragma redefine_extname clearerr ___mfwrap_clearerr
+#pragma redefine_extname feof ___mfwrap_feof
+#pragma redefine_extname ferror ___mfwrap_ferror
+#pragma redefine_extname fileno ___mfwrap_fileno
+#pragma redefine_extname printf ___mfwrap_printf
+#pragma redefine_extname fprintf ___mfwrap_fprintf
+#pragma redefine_extname sprintf ___mfwrap_sprintf
+#pragma redefine_extname snprintf ___mfwrap_snprintf
+#pragma redefine_extname vprintf ___mfwrap_vprintf
+#pragma redefine_extname vfprintf ___mfwrap_vfprintf
+#pragma redefine_extname vsprintf ___mfwrap_vsprintf
+#pragma redefine_extname vsnprintf ___mfwrap_vsnprintf
+#pragma redefine_extname access ___mfwrap_access
+#pragma redefine_extname remove ___mfwrap_remove
+#pragma redefine_extname fflush ___mfwrap_fflush
+#pragma redefine_extname fseek ___mfwrap_fseek
+#pragma redefine_extname ftell ___mfwrap_ftell
+#pragma redefine_extname rewind ___mfwrap_rewind
+#pragma redefine_extname fgetpos ___mfwrap_fgetpos
+#pragma redefine_extname fsetpos ___mfwrap_fsetpos
+#pragma redefine_extname stat ___mfwrap_stat
+#pragma redefine_extname fstat ___mfwrap_fstat
+#pragma redefine_extname lstat ___mfwrap_lstat
+#pragma redefine_extname mkfifo ___mfwrap_mkfifo
+#pragma redefine_extname setvbuf ___mfwrap_setvbuf
+#pragma redefine_extname setbuf ___mfwrap_setbuf
+#pragma redefine_extname setbuffer ___mfwrap_setbuffer
+#pragma redefine_extname setlinebuf ___mfwrap_setlinebuf
+#pragma redefine_extname opendir ___mfwrap_opendir
+#pragma redefine_extname closedir ___mfwrap_closedir
+#pragma redefine_extname readdir ___mfwrap_readdir
+#pragma redefine_extname recv ___mfwrap_recv
+#pragma redefine_extname recvfrom ___mfwrap_recvfrom
+#pragma redefine_extname recvmsg ___mfwrap_recvmsg
+#pragma redefine_extname send ___mfwrap_send
+#pragma redefine_extname sendto ___mfwrap_sendto
+#pragma redefine_extname sendmsg ___mfwrap_sendmsg
+#pragma redefine_extname setsockopt ___mfwrap_setsockopt
+#pragma redefine_extname getsockopt ___mfwrap_getsockopt
+#pragma redefine_extname accept ___mfwrap_accept
+#pragma redefine_extname bind ___mfwrap_bind
+#pragma redefine_extname connect ___mfwrap_connect
+#pragma redefine_extname gethostname ___mfwrap_gethostname
+#pragma redefine_extname sethostname ___mfwrap_sethostname
+#pragma redefine_extname gethostbyname ___mfwrap_gethostbyname
+#pragma redefine_extname wait ___mfwrap_wait
+#pragma redefine_extname waitpid ___mfwrap_waitpid
+#pragma redefine_extname popen ___mfwrap_popen
+#pragma redefine_extname pclose ___mfwrap_pclose
+#pragma redefine_extname execve ___mfwrap_execve
+#pragma redefine_extname execv ___mfwrap_execv
+#pragma redefine_extname execvp ___mfwrap_execvp
+#pragma redefine_extname system ___mfwrap_system
+#pragma redefine_extname dlopen ___mfwrap_dlopen
+#pragma redefine_extname dlerror ___mfwrap_dlerror
+#pragma redefine_extname dlsym ___mfwrap_dlsym
+#pragma redefine_extname dlclose ___mfwrap_dlclose
+#pragma redefine_extname fopen64 ___mfwrap_fopen64
+#pragma redefine_extname freopen64 ___mfwrap_freopen64
+#pragma redefine_extname stat64 ___mfwrap_stat64
+#pragma redefine_extname fseeko64 ___mfwrap_fseeko64
+#pragma redefine_extname ftello64 ___mfwrap_ftello64
+#pragma redefine_extname semop ___mfwrap_semop
+#pragma redefine_extname semctl ___mfwrap_semctl
+#pragma redefine_extname shmctl ___mfwrap_shmctl
+#pragma redefine_extname shmat ___mfwrap_shmat
+#pragma redefine_extname shmdt ___mfwrap_shmdt
+#pragma redefine_extname __ctype_b_loc ___mfwrap___ctype_b_loc
+#pragma redefine_extname __ctype_toupper_loc ___mfwrap___ctype_toupper_loc
+#pragma redefine_extname __ctype_tolower_loc ___mfwrap___ctype_tolower_loc
+#pragma redefine_extname getlogin ___mfwrap_getlogin
+#pragma redefine_extname cuserid ___mfwrap_cuserid
+#pragma redefine_extname getpwnam ___mfwrap_getpwnam
+#pragma redefine_extname getpwuid ___mfwrap_getpwuid
+#pragma redefine_extname getgrnam ___mfwrap_getgrnam
+#pragma redefine_extname getgrgid ___mfwrap_getgrgid
+#pragma redefine_extname getservent ___mfwrap_getservent
+#pragma redefine_extname getservbyname ___mfwrap_getservbyname
+#pragma redefine_extname getservbyport ___mfwrap_getservbyport
+#pragma redefine_extname gai_strerror ___mfwrap_gai_strerror
+#pragma redefine_extname getmntent ___mfwrap_getmntent
+#pragma redefine_extname inet_ntoa ___mfwrap_inet_ntoa
+#pragma redefine_extname getprotoent ___mfwrap_getprotoent
+#pragma redefine_extname getprotobyname ___mfwrap_getprotobyname
+#pragma redefine_extname getprotobynumber ___mfwrap_getprotobynumber
+#endif
 
 /* Disable glibc macros.  */
 #define __NO_STRING_INLINES
diff -aurN gcc-4.8.2.orig/libssp/ssp.c gcc-4.8.2/libssp/ssp.c
--- gcc-4.8.2.orig/libssp/ssp.c	2013-02-06 22:03:54 +0000
+++ gcc-4.8.2/libssp/ssp.c	2014-02-19 20:42:12 +0000
@@ -63,6 +63,9 @@
 #ifdef HAVE_SYSLOG_H
 # include <syslog.h>
 #endif
+#ifdef __MINT__
+#include <mint/osbind.h>
+#endif
 
 void *__stack_chk_guard = 0;
 
@@ -98,6 +101,9 @@
 {
 #ifdef __GNU_LIBRARY__
   extern char * __progname;
+#elif defined (__MINT__)
+  extern char * program_invocation_short_name;
+  #define __progname program_invocation_short_name
 #else
   static const char __progname[] = "";
 #endif
@@ -139,6 +145,9 @@
     syslog (LOG_CRIT, msg3);
 #endif /* HAVE_SYSLOG_H */
 
+#ifdef __MINT__
+    Pterm(127);
+#else
   /* Try very hard to exit.  Note that signals may be blocked preventing
      the first two options from working.  The use of volatile is here to
      prevent optimizers from "knowing" that __builtin_trap is called first,
@@ -160,6 +169,7 @@
           break;
         }
   }
+#endif
 }
 
 void
diff -aurN gcc-4.8.2.orig/libstdc++-v3/config/os/mint/ctype_base.h gcc-4.8.2/libstdc++-v3/config/os/mint/ctype_base.h
--- gcc-4.8.2.orig/libstdc++-v3/config/os/mint/ctype_base.h	1970-01-01 00:00:00 +0000
+++ gcc-4.8.2/libstdc++-v3/config/os/mint/ctype_base.h	2014-02-22 23:18:49 +0000
@@ -0,0 +1,58 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 1997-2013 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+// Mint C types, taken from mintlib-0.57.3/include/ctype.h
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  /// @brief  Base class for ctype.
+  struct ctype_base
+  {
+    // Non-standard typedefs.
+    typedef const int* 		__to_type;
+
+    // NB: Offsets into ctype<char>::_M_table force a particular size
+    // on the mask type. Because of this, we don't use an enum.
+    typedef unsigned int 	mask;
+    static const mask upper    	= _CTu;
+    static const mask lower 	= _CTl;
+    static const mask alpha 	= _CTu | _CTl;
+    static const mask digit 	= _CTd;
+    static const mask xdigit 	= _CTx;
+    static const mask space 	= _CTs;
+    static const mask print 	= _CTP;
+    static const mask graph 	= _CTg;
+    static const mask cntrl 	= _CTc;
+    static const mask punct 	= _CTp;
+    static const mask alnum 	= _CTd | _CTu | _CTl ;
+  };
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff -aurN gcc-4.8.2.orig/libstdc++-v3/config/os/mint/ctype_configure_char.cc gcc-4.8.2/libstdc++-v3/config/os/mint/ctype_configure_char.cc
--- gcc-4.8.2.orig/libstdc++-v3/config/os/mint/ctype_configure_char.cc	1970-01-01 00:00:00 +0000
+++ gcc-4.8.2/libstdc++-v3/config/os/mint/ctype_configure_char.cc	2013-02-03 17:54:05 +0000
@@ -0,0 +1,99 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2011-2013 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file ctype_configure_char.cc */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+#include <locale>
+#include <cstdlib>
+#include <cstring>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+// Information as gleaned from /usr/include/ctype.h
+
+  const ctype_base::mask*
+  ctype<char>::classic_table() throw()
+  { return 0; }
+
+  ctype<char>::ctype(__c_locale, const mask* __table, bool __del, 
+		     size_t __refs) 
+  : facet(__refs), _M_del(__table != 0 && __del), 
+  _M_toupper(NULL), _M_tolower(NULL), 
+  _M_table(__table ? __table : classic_table()) 
+  { 
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) 
+  : facet(__refs), _M_del(__table != 0 && __del), 
+  _M_toupper(NULL), _M_tolower(NULL), 
+  _M_table(__table ? __table : classic_table())
+  { 
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  char
+  ctype<char>::do_toupper(char __c) const
+  { return ::toupper((int) __c); }
+
+  const char*
+  ctype<char>::do_toupper(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = ::toupper((int) *__low);
+	++__low;
+      }
+    return __high;
+  }
+
+  char
+  ctype<char>::do_tolower(char __c) const
+  { return ::tolower((int) __c); }
+
+  const char* 
+  ctype<char>::do_tolower(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = ::tolower((int) *__low);
+	++__low;
+      }
+    return __high;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff -aurN gcc-4.8.2.orig/libstdc++-v3/config/os/mint/ctype_inline.h gcc-4.8.2/libstdc++-v3/config/os/mint/ctype_inline.h
--- gcc-4.8.2.orig/libstdc++-v3/config/os/mint/ctype_inline.h	1970-01-01 00:00:00 +0000
+++ gcc-4.8.2/libstdc++-v3/config/os/mint/ctype_inline.h	2014-02-22 23:13:48 +0000
@@ -0,0 +1,76 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2000-2013 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/ctype_inline.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{locale}
+ */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+  
+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)
+// functions go in ctype.cc
+  
+// Mint C types, taken from mintlib-0.57.3/include/ctype.h
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  bool
+  ctype<char>::
+  is(mask __m, char __c) const
+  { return _ctype[(unsigned char)((__c) + 1)] & __m; }
+
+  const char*
+  ctype<char>::
+  is(const char* __low, const char* __high, mask* __vec) const
+  {
+    while (__low < __high)
+      *__vec++ = _ctype[(*__low++) + 1] ;
+    return __high;
+  }
+
+  const char*
+  ctype<char>::
+  scan_is(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && !this->is(__m, *__low))
+      ++__low;
+    return __low;
+  }
+
+  const char*
+  ctype<char>::
+  scan_not(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && this->is(__m, *__low) != 0)
+      ++__low;
+    return __low;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff -aurN gcc-4.8.2.orig/libstdc++-v3/config/os/mint/os_defines.h gcc-4.8.2/libstdc++-v3/config/os/mint/os_defines.h
--- gcc-4.8.2.orig/libstdc++-v3/config/os/mint/os_defines.h	1970-01-01 00:00:00 +0000
+++ gcc-4.8.2/libstdc++-v3/config/os/mint/os_defines.h	2013-02-03 17:54:05 +0000
@@ -0,0 +1,36 @@
+// Specific definitions for generic platforms  -*- C++ -*-
+
+// Copyright (C) 2000-2013 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/os_defines.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{iosfwd}
+ */
+
+#ifndef _GLIBCXX_OS_DEFINES
+#define _GLIBCXX_OS_DEFINES 1
+
+// System-specific #define, typedefs, corrections, etc, go here.  This
+// file will come before all others.
+
+#endif
diff -aurN gcc-4.8.2.orig/libstdc++-v3/configure gcc-4.8.2/libstdc++-v3/configure
--- gcc-4.8.2.orig/libstdc++-v3/configure	2013-05-24 18:10:37 +0000
+++ gcc-4.8.2/libstdc++-v3/configure	2014-02-19 20:42:12 +0000
@@ -46113,7 +46113,7 @@
 	;;
     esac
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu | *-mint*)
 
   # All these tests are for C++; save the language and the compiler flags.
   # The CXXFLAGS thing is suspicious, but based on similar bits previously
diff -aurN gcc-4.8.2.orig/libstdc++-v3/configure.host gcc-4.8.2/libstdc++-v3/configure.host
--- gcc-4.8.2.orig/libstdc++-v3/configure.host	2013-06-19 01:18:38 +0000
+++ gcc-4.8.2/libstdc++-v3/configure.host	2014-02-19 20:42:12 +0000
@@ -288,6 +288,10 @@
     esac
     OPT_LDFLAGS="${OPT_LDFLAGS} \$(lt_host_flags)"
     ;;
+  mint*)
+    SECTION_FLAGS="${SECTION_FLAGS} -D_GNU_SOURCE"
+    os_include_dir="os/mint"
+    ;;
   netbsd*)
     os_include_dir="os/bsd/netbsd"
     ;;
diff -aurN gcc-4.8.2.orig/libstdc++-v3/crossconfig.m4 gcc-4.8.2/libstdc++-v3/crossconfig.m4
--- gcc-4.8.2.orig/libstdc++-v3/crossconfig.m4	2012-05-02 19:34:31 +0000
+++ gcc-4.8.2/libstdc++-v3/crossconfig.m4	2014-02-19 20:42:12 +0000
@@ -141,7 +141,7 @@
 	;;
     esac
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu | *-mint*)
     GLIBCXX_CHECK_COMPILER_FEATURES
     GLIBCXX_CHECK_LINKER_FEATURES
     GLIBCXX_CHECK_MATH_SUPPORT
