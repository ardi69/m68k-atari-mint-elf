diff -aurN pml-2.03/pmlsrc/Makefile pml-2.03-mint-20110207/pmlsrc/Makefile
--- pml-2.03/pmlsrc/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/Makefile	2011-02-07 22:54:57.093750000 +0100
@@ -0,0 +1,39 @@
+CROSSDIR = /dsrg/bammi/cross-minix
+CROSSLIB = $(CROSSDIR)/lib
+CROSSBIN = $(CROSSDIR)/bin
+CROSSINC = $(CROSSDIR)/include
+WITH_SHORT_LIBS = 0
+
+ALL = libpml32.a
+
+ifeq ($(WITH_SHORT_LIBS), 1)
+ALL += libpml.a
+endif
+
+all : $(ALL)
+
+libpml32.a :
+	make -f Makefile.32 clean
+	make -f Makefile.32 libpml32.a
+
+ifeq ($(WITH_SHORT_LIBS), 1)
+libpml.a :
+	make -f Makefile.16 clean
+	make -f Makefile.16 libpml.a
+endif
+
+install : $(ALL)
+	mkdir -p $(CROSSLIB)
+	cp libpml32.a $(CROSSLIB)/libm.a
+ifeq ($(WITH_SHORT_LIBS), 1)
+	mkdir -p $(CROSSLIB)/mshort
+	cp libpml.a $(CROSSLIB)/mshort/libm.a
+endif
+	mkdir -p $(CROSSINC)
+	cp math.h $(CROSSINC)
+
+clean:
+	make -f Makefile.32 clean
+ifeq ($(WITH_SHORT_LIBS), 1)
+	make -f Makefile.16 clean
+endif
diff -aurN pml-2.03/pmlsrc/Makefile.16 pml-2.03-mint-20110207/pmlsrc/Makefile.16
--- pml-2.03/pmlsrc/Makefile.16	1994-03-19 15:40:08.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/Makefile.16	2011-02-07 22:54:57.109375000 +0100
@@ -22,7 +22,7 @@
 
 AR = /dsrg/bammi/cross-gcc/bin/car
 CC = $(CROSSBIN)/mgcc
-CFLAGS = -mshort -O2 -DIEEE -DNO_DBUG -D__GCC_HACK__ -I.
+CFLAGS = -mshort -O2 -fomit-frame-pointer -DIEEE -DNO_DBUG -I.
 
 LIB = $(CROSSLIB)
 
@@ -44,7 +44,7 @@
 
 LEVEL4 =	cadd.o
 
-OBJ =		$(LEVEL4) $(LEVEL3) $(LEVEL2) $(LEVEL1) $(LEVEL0)
+OBJ =		$(LEVEL4) $(LEVEL2) $(LEVEL1) $(LEVEL0)
 
 #
 #	The default thing to make.
diff -aurN pml-2.03/pmlsrc/Makefile.32 pml-2.03-mint-20110207/pmlsrc/Makefile.32
--- pml-2.03/pmlsrc/Makefile.32	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/Makefile.32	2011-02-07 22:54:57.125000000 +0100
@@ -22,7 +22,7 @@
 
 AR = /dsrg/bammi/cross-gcc/bin/car
 CC = $(CROSSBIN)/mgcc
-CFLAGS = -O2 -DIEEE -DNO_DBUG -D__GCC_HACK__ -I.
+CFLAGS = -O2 -fomit-frame-pointer -DIEEE -DNO_DBUG -I.
 
 LIB = $(CROSSLIB)
 
@@ -44,7 +44,7 @@
 
 LEVEL4 =	cadd.o
 
-OBJ =		$(LEVEL4) $(LEVEL3) $(LEVEL2) $(LEVEL1) $(LEVEL0)
+OBJ =		$(LEVEL4) $(LEVEL2) $(LEVEL1) $(LEVEL0)
 
 #
 #	The default thing to make.
diff -aurN pml-2.03/pmlsrc/acos.c pml-2.03-mint-20110207/pmlsrc/acos.c
--- pml-2.03/pmlsrc/acos.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/acos.c	2011-02-07 22:54:57.125000000 +0100
@@ -101,7 +101,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: DOMAIN error\n", funcname);
+	    //fprintf (stderr, "%s: DOMAIN error\n", funcname);
 	    errno = EDOM;
 	    xcpt.retval = HUGE_VAL;	/* for now, should ne NaN	*/
 	}
@@ -131,150 +131,150 @@
 zahl =	  0
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
     __asm(".text; .even");
 
 #ifdef ERROR_CHECK
 
-__asm("
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"acos: %s error\\n\\0\"
-.even
-");
+__asm(
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"acos: %s error\\n\\0\"\t\n"
+".even\t\n"
+);
 
 #endif ERROR_CHECK
 
 #ifdef ERROR_CHECK
-    __asm("
-| m.ritzert 14.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
+    __asm(
+"| m.ritzert 14.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
 #endif ERROR_CHECK
 
-__asm("
-.even
-.globl _acos
-_acos:
-    ");	/* end asm	*/
+__asm(
+".even\t\n"
+".globl _acos\t\n"
+"_acos:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	facosd	a7@(4), fp0	| acos
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	facosd	a7@(4), fp0	| acos\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
-    __asm("
-	lea	0xfffa50,a0
-	movew	#0x541c,a0@(comm)	| specify function
-	cmpiw	#0x8900,a0@(resp)	| check
-	movel	a7@(4),a0@		| load arg_hi
-	movel	a7@(8),a0@		| load arg_low
-	movew	#0x7400,a0@(comm)	| result to d0
-	.long	0x0c688900, 0xfff067f8	| wait
-	movel	a0@,d0
-	movel	a0@,d1
-    ");	/* end asm	*/
+    __asm(
+"	lea	0xfffa50,a0\t\n"
+"	movew	#0x541c,a0@(comm)	| specify function\t\n"
+"	cmpiw	#0x8900,a0@(resp)	| check\t\n"
+"	movel	a7@(4),a0@		| load arg_hi\t\n"
+"	movel	a7@(8),a0@		| load arg_low\t\n"
+"	movew	#0x7400,a0@(comm)	| result to d0\t\n"
+"	.long	0x0c688900, 0xfff067f8	| wait\t\n"
+"	movel	a0@,d0\t\n"
+"	movel	a0@,d1\t\n"
+    );	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
 # ifdef ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-");
-# endif ERROR_CHECK
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+);
+# endif /* ERROR_CHECK */
 __asm("rts");
 
 #endif /* __M68881__ || sfp004	*/
diff -aurN pml-2.03/pmlsrc/acosh.c pml-2.03-mint-20110207/pmlsrc/acosh.c
--- pml-2.03/pmlsrc/acosh.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/acosh.c	2011-02-07 22:54:57.140625000 +0100
@@ -85,7 +85,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: DOMAIN error\n", funcname);
+	    //fprintf (stderr, "%s: DOMAIN error\n", funcname);
 	    errno = ERANGE;
 	    xcpt.retval = HUGE_VAL;
 	}
@@ -94,7 +94,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: OVERFLOW error\n", funcname);
+	    //fprintf (stderr, "%s: OVERFLOW error\n", funcname);
 	    errno = ERANGE;
 	    x = SQRT_MAXDOUBLE;
 	    xcpt.retval = log (2* SQRT_MAXDOUBLE);
diff -aurN pml-2.03/pmlsrc/asin.c pml-2.03-mint-20110207/pmlsrc/asin.c
--- pml-2.03/pmlsrc/asin.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/asin.c	2011-02-07 22:54:57.156250000 +0100
@@ -95,7 +95,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: DOMAIN error\n", funcname);
+	    //fprintf (stderr, "%s: DOMAIN error\n", funcname);
 	    errno = EDOM;
 	    xcpt.retval = HUGE_VAL;
 	}
@@ -110,7 +110,7 @@
     }
     return (xcpt.retval);
 }
-#endif !defined (__M68881__) && !defined (sfp004)	/* mjr++	*/
+#endif /* !defined (__M68881__) #endif !defined (__M68881__) && !defined (sfp004)#endif !defined (__M68881__) && !defined (sfp004) !defined (sfp004) */	/* mjr++	*/
 #ifdef	sfp004
 
 __asm("
@@ -121,68 +121,68 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
     __asm(".text; .even");
 
 # ifdef ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"asin: %s error\\n\\0\"
-.even
-
-| pml compatible asingent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-
-");	/* END ASM	*/
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"asin: %s error\\n\\0\"\t\n"
+".even\t\n"
+"\t\n"
+"| pml compatible asingent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+"\t\n"
+);	/* END ASM	*/
 # endif	ERROR_CHECK
-__asm("
-.even
-	.globl _asin
-_asin:
-
-");	/* end asm	*/
+__asm(
+".even\t\n"
+"	.globl _asin\t\n"
+"_asin:\t\n"
+"\t\n"
+);	/* end asm	*/
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fasind	a7@(4), fp0	| asin
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	fasind	a7@(4), fp0	| asin\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -196,71 +196,71 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:"
+"	swap	d0"
+"	moveml	d0-d1,a7@-"
+"	movel	#63,_errno	| errno = ERANGE"
+"	pea	_Overflow	| for printf"
+"	bra	error_exit	|"
+"error_plus:"
+"	swap	d0"
+"	moveml	d0-d1,a7@-"
+"	movel	#63,_errno	| NAN => errno = EDOM"
+"	pea	_Overflow	| for printf"
+"	bra	error_exit	|"
+"error_nan:"
+"	moveml	a0@(24),d0-d1	| result = +inf"
+"	moveml	d0-d1,a7@-"
+"	movel	#62,_errno	| NAN => errno = EDOM"
+"	pea	_Domain		| for printf"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:"
+"	swap	d0"
+"	moveml	d0-d1,a7@-"
+"	movew	#63,_errno	| errno = ERANGE"
+"	pea	_Overflow	| for printf"
+"	bra	error_exit	|"
+"error_plus:"
+"	swap	d0"
+"	moveml	d0-d1,a7@-"
+"	movew	#63,_errno	| NAN => errno = EDOM"
+"	pea	_Overflow	| for printf"
+"	bra	error_exit	|"
+"error_nan:"
+"	moveml	a0@(24),d0-d1	| result = +inf"
+"	moveml	d0-d1,a7@-"
+"	movew	#62,_errno	| NAN => errno = EDOM"
+"	pea	_Domain		| for printf"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 __asm("rts");
 # endif	ERROR_CHECK
diff -aurN pml-2.03/pmlsrc/asinh.c pml-2.03-mint-20110207/pmlsrc/asinh.c
--- pml-2.03/pmlsrc/asinh.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/asinh.c	2011-02-07 22:54:57.156250000 +0100
@@ -85,7 +85,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: OVERFLOW error\n", funcname);
+	    //fprintf (stderr, "%s: OVERFLOW error\n", funcname);
 	    errno = ERANGE;
 	    xcpt.retval = log (2 * SQRT_MAXDOUBLE);
 	}
diff -aurN pml-2.03/pmlsrc/atan.c pml-2.03-mint-20110207/pmlsrc/atan.c
--- pml-2.03/pmlsrc/atan.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/atan.c	2011-02-07 22:54:57.171875000 +0100
@@ -198,7 +198,7 @@
 		    xcpt.type = UNDERFLOW;
 		    xcpt.name = funcname;
 		    xcpt.arg1 = x;
-		    fprintf (stderr, "%s: UNDERFLOW error\n", funcname);
+		    //fprintf (stderr, "%s: UNDERFLOW error\n", funcname);
 		    errno = EDOM;
 		}
 		x = 0.0;
@@ -238,68 +238,68 @@
 zahl =	  0
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"atan: %s error\\n\\0\"
-.even
-
-
-| pml compatible atangent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"atan: %s error\\n\\0\"\t\n"
+".even\t\n"
+"\t\n"
+"\t\n"
+"| pml compatible atangent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
 # endif	ERROR_CHECK
 
-__asm("
-.even
-	.globl _atan
-_atan:
-    ");	/* end asm	*/
+__asm(
+".even\t\n"
+"	.globl _atan\t\n"
+"_atan:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fatand	a7@(4), fp0	| atan
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	fatand	a7@(4), fp0	| atan\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -313,42 +313,42 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+    );
 # endif	ERROR_CHECK
 
 __asm("rts");
diff -aurN pml-2.03/pmlsrc/atan2.c pml-2.03-mint-20110207/pmlsrc/atan2.c
--- pml-2.03/pmlsrc/atan2.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/atan2.c	2011-02-07 22:54:57.187500000 +0100
@@ -111,7 +111,7 @@
 	    xcpt.arg1 = x;
 	    xcpt.retval = result;
 	    if (!matherr(&xcpt)) {
-		fprintf (stderr, "%s: DOMAIN error\n", funcname);
+		//fprintf (stderr, "%s: DOMAIN error\n", funcname);
 		errno = EDOM;
 	    }
 	} else {
@@ -126,58 +126,58 @@
     return (result);
 }
 
-#endif !defined (__M68881__) && !defined (sfp004)
+#endif /* !defined (__M68881__) #endif !defined (__M68881__) && !defined (sfp004)#endif !defined (__M68881__) && !defined (sfp004) !defined (sfp004) */
 #ifdef	__M68881__
-__asm("
-.text
-.even
-_funcname:
-	.ascii	\"atan2\\0\"
-	.even
-
-.globl	_atan2
-_atan2:
-| denormalized numbers are treated as 0
-	tstl	sp@(12)
-	beq	5f		| x == 0!
-	blt	1f		| x < 0!
-				| x > 0: return atan(y/x)
-
-	fmoved	sp@(4),fp0	| get y
-	fdivd	sp@(12),fp0	| y/x	
-	fatanx	fp0,fp0		| atan(y/x)
-	bra 3f			| return
-1:				| x < 0
-
-	fmovecr	#0,fp1		| get pi
-	fmoved	sp@(4),fp0	| get y
-	fdivd	sp@(12),fp0	| y/x
-	fatanx	fp0,fp0		| atan(y/x)
-	btst	#31,sp@(4)	| sign(y)
-	beq	2f		| positive!
-
-	fnegx	fp1,fp1		| transfer sign
-2:	faddx	fp1,fp0		| sign(y)*pi + atan(y/x)
-|	bra 3f			| return
-3:
-	fmoved	fp0,sp@-	| return result
-	moveml	sp@+,d0/d1
-4:	
-	rts			| sigh.
-5:				| x == 0
-	movel	#1073291771,d0	| pi/2
-	movel	#1413754136,d1	|
-
-	tstl	sp@(4)		| 
-	beq	6f		| NaN
-	bge	4b		| exit
-	bset	#31,d0		| x < 0 : return -pi/2
-	bra	4b
-6:	movel	#-1,d0		| NaN
-	movel	#-1,d1		|
-	bra	4b
-");	/* end asm	*/
-#endif	__M68881__
+__asm(
+".text\t\n"
+".even\t\n"
+"_funcname:\t\n"
+"	.ascii	\"atan2\\0\"\t\n"
+"	.even\t\n"
+"\t\n"
+".globl	_atan2\t\n"
+"_atan2:\t\n"
+"| denormalized numbers are treated as 0\t\n"
+"	tstl	sp@(12)\t\n"
+"	beq	5f		| x == 0!\t\n"
+"	blt	1f		| x < 0!\t\n"
+"				| x > 0: return atan(y/x)\t\n"
+"\t\n"
+"	fmoved	sp@(4),fp0	| get y\t\n"
+"	fdivd	sp@(12),fp0	| y/x\t\n"
+"	fatanx	fp0,fp0		| atan(y/x)\t\n"
+"	bra 3f			| return\t\n"
+"1:				| x < 0\t\n"
+"\t\n"
+"	fmovecr	#0,fp1		| get pi\t\n"
+"	fmoved	sp@(4),fp0	| get y\t\n"
+"	fdivd	sp@(12),fp0	| y/x\t\n"
+"	fatanx	fp0,fp0		| atan(y/x)\t\n"
+"	btst	#31,sp@(4)	| sign(y)\t\n"
+"	beq	2f		| positive!\t\n"
+"\t\n"
+"	fnegx	fp1,fp1		| transfer sign\t\n"
+"2:	faddx	fp1,fp0		| sign(y)*pi + atan(y/x)\t\n"
+"|	bra 3f			| return\t\n"
+"3:\t\n"
+"	fmoved	fp0,sp@-	| return result\t\n"
+"	moveml	sp@+,d0/d1\t\n"
+"4:	\t\n"
+"	rts			| sigh.\t\n"
+"5:				| x == 0\t\n"
+"	movel	#1073291771,d0	| pi/2\t\n"
+"	movel	#1413754136,d1	|\t\n"
+"\t\n"
+"	tstl	sp@(4)		| \t\n"
+"	beq	6f		| NaN\t\n"
+"	bge	4b		| exit\t\n"
+"	bset	#31,d0		| x < 0 : return -pi/2\t\n"
+"	bra	4b\t\n"
+"6:	movel	#-1,d0		| NaN\t\n"
+"	movel	#-1,d1		|\t\n"
+"	bra	4b\t\n"
+);	/* end asm	*/
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -277,4 +277,4 @@
 	movel	#-1,d1		|
 	bra	4b
 ");	/* end asm	*/
-#endif	sfp004
+#endif /* sfp004 */
diff -aurN pml-2.03/pmlsrc/atanh.c pml-2.03-mint-20110207/pmlsrc/atanh.c
--- pml-2.03/pmlsrc/atanh.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/atanh.c	2011-02-07 22:54:57.187500000 +0100
@@ -84,7 +84,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: DOMAIN error\n", funcname);
+	    //fprintf (stderr, "%s: DOMAIN error\n", funcname);
 	    errno = ERANGE;
 	    xcpt.retval = HUGE_VAL;
 	}
@@ -102,66 +102,66 @@
 zahl =	  0
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"atanh: %s error\\n\\0\"
-.even
-| pml compatible atanhgent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"atanh: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| pml compatible atanhgent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
 # endif	ERROR_CHECK
 
-__asm("
-.even
-	.globl _atanh
-_atanh:
-    ");	/* end asm	*/
+__asm(
+".even\t\n"
+"	.globl _atanh\t\n"
+"_atanh:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fatanhd	a7@(4), fp0	| atanh
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	fatanhd	a7@(4), fp0	| atanh\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -175,70 +175,70 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+    );
 # endif	ERROR_CHECK
 
 __asm("	rts");
diff -aurN pml-2.03/pmlsrc/cabs.c pml-2.03-mint-20110207/pmlsrc/cabs.c
--- pml-2.03/pmlsrc/cabs.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cabs.c	2011-02-07 22:54:57.203125000 +0100
@@ -73,59 +73,59 @@
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"cos: %s error\\n\\0\"
-.even
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"cos: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
 # endif	ERROR_CHECK
 #endif	/* __M68881, sfp004	*/
 
 #ifdef	__M68881__
-__asm("
-.even
-.globl _cabs
-_cabs:
-	fmoved	a7@(4),fp0	|
-	fmulx	fp0,fp0		| x**2
-	fmoved	a7@(12),fp1	|
-	fmulx	fp1,fp1		| y**2
-	faddx	fp1,fp0		|
-	fsqrtx	fp0,fp0		| sqrt( x**2 + y**2 )
-	fmoved	fp0,a7@-	|
-	moveml	a7@+,d0-d1	| return arg
-");
-#endif	__M68881__
+__asm(
+".even\t\n"
+".globl _cabs\t\n"
+"_cabs:\t\n"
+"	fmoved	a7@(4),fp0	|\t\n"
+"	fmulx	fp0,fp0		| x**2\t\n"
+"	fmoved	a7@(12),fp1	|\t\n"
+"	fmulx	fp1,fp1		| y**2\t\n"
+"	faddx	fp1,fp0		|\t\n"
+"	fsqrtx	fp0,fp0		| sqrt( x**2 + y**2 )\t\n"
+"	fmoved	fp0,a7@-	|\t\n"
+"	moveml	a7@+,d0-d1	| return arg\t\n"
+);
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -189,58 +189,58 @@
 	movel	a0@(zahl),d0
 	movel	a0@(zahl),d1
 ");	/* end asm	*/
-#endif	sfp004	
+#endif /* sfp004 */	
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK
-__asm("
-	lea double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+__asm(
+"	lea double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-");	/* end asm	*/
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+);	/* end asm	*/
 # else	ERROR_CHECK
 __asm("rts");
 # endif	ERROR_CHECK
diff -aurN pml-2.03/pmlsrc/cadd.c pml-2.03-mint-20110207/pmlsrc/cadd.c
--- pml-2.03/pmlsrc/cadd.c	1994-03-19 15:40:10.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cadd.c	2011-02-07 22:54:57.203125000 +0100
@@ -78,25 +78,25 @@
     z1.imag += z2.imag;
     return (z1);
 }
-#endif !defined (__M68881__) && !defined (sfp004)
+#endif /* !defined (__M68881__) #endif !defined (__M68881__) && !defined (sfp004)#endif !defined (__M68881__) && !defined (sfp004) !defined (sfp004) */
 
 #ifdef	__M68881__
-__asm("
-.text
-_funcname:
-	.ascii	\"cadd\\0\"
-.even
-.globl	_cadd
-_cadd:
-	fmoved	sp@(4),fp0
-	faddd	sp@(20),fp0
-	fmoved	sp@(12),fp1
-	faddd	sp@(28),fp1
-	movel	a1,d0		| pointer to result
-	fmoved	fp0,a1@		| return z.real
-	fmoved	fp1,a1@(8)	| return z.imag
-");	/* end asm	*/
-#endif	__M68881__
+__asm(
+".text\t\n"
+"_funcname:\t\n"
+"	.ascii	\"cadd\\0\"\t\n"
+".even\t\n"
+".globl	_cadd\t\n"
+"_cadd:\t\n"
+"	fmoved	sp@(4),fp0\t\n"
+"	faddd	sp@(20),fp0\t\n"
+"	fmoved	sp@(12),fp1\t\n"
+"	faddd	sp@(28),fp1\t\n"
+"	movel	a1,d0		| pointer to result\t\n"
+"	fmoved	fp0,a1@		| return z.real\t\n"
+"	fmoved	fp1,a1@(8)	| return z.imag\t\n"
+);	/* end asm	*/
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -146,17 +146,17 @@
 	movel	a0@(zahl),a1@(8)
 	movel	a0@(zahl),a1@(12)
 ");	/* end asm	*/
-#endif	sfp004
+#endif /* sfp004 */
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
-__asm("
-	pea	_funcname
-	jmp	c_err_check	
-");	/* end asm	*/
-# else  ERROR_CHECK
+__asm(
+"	pea	_funcname\t\n"
+"	jmp	c_err_check\t\n"
+);	/* end asm	*/
+# else /* ERROR_CHECK */
 
 __asm("rts");
 
-# endif ERROR_CHECK
-#endif defined (__M68881__) || defined (sfp004)
+# endif /* ERROR_CHECK */
+#endif /* defined (__M68881__) || defined (sfp004) */
diff -aurN pml-2.03/pmlsrc/ccos.c pml-2.03-mint-20110207/pmlsrc/ccos.c
--- pml-2.03/pmlsrc/ccos.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/ccos.c	2011-02-07 22:54:57.218750000 +0100
@@ -77,40 +77,40 @@
     result.imag = -sin(z.real) * sinh(z.imag);
     return (result);
 }
-#endif !defined (__M68881__) && !defined (sfp004)
+#endif /* !defined (__M68881__) #endif !defined (__M68881__) && !defined (sfp004)#endif !defined (__M68881__) && !defined (sfp004) !defined (sfp004) */
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
-__asm("
-.text
-_funcname:
-	.ascii	\"ccos\\0\"
-	.even
-");	/* end asm	*/
-# endif ERROR_CHECK
+__asm(
+".text\t\n"
+"_funcname:\t\n"
+"	.ascii	\"ccos\\0\"\t\n"
+"	.even\t\n"
+);	/* end asm	*/
+# endif /* ERROR_CHECK */
 #endif defined (__M68881__) || defined (sfp004)
 
 #ifdef	__M68881__
-__asm("
-.text
-	.globl _ccos
-_ccos:
-	movel	a1,d0		| save a1 as return value
-	fmoved	sp@(4),fp0	| z.real
-	fsinx	fp0,fp1		| cos(z.real)
-	fcosx	fp0,fp0		| sin(z.real)
-	fnegx	fp1,fp1		|-sin(z.real)
-
-	fmoved	sp@(12),fp3	| z.imag
-	fcoshx	fp3,fp2		| cosh(z.imag)
-	fsinhx	fp3,fp3		| sinh(z.imag)
-	
-	fmulx	fp2,fp0		| result.real
-	fmoved	fp0,a1@		|
-	fmulx	fp3,fp1		| result.imag
-	fmoved	fp1,a1@(8)	|
-");	/* end asm	*/
-#endif	__M68881__
+__asm(
+".text\t\n"
+"	.globl _ccos\t\n"
+"_ccos:\t\n"
+"	movel	a1,d0		| save a1 as return value\t\n"
+"	fmoved	sp@(4),fp0	| z.real\t\n"
+"	fsinx	fp0,fp1		| cos(z.real)\t\n"
+"	fcosx	fp0,fp0		| sin(z.real)\t\n"
+"	fnegx	fp1,fp1		|-sin(z.real)\t\n"
+"\t\n"
+"	fmoved	sp@(12),fp3	| z.imag\t\n"
+"	fcoshx	fp3,fp2		| cosh(z.imag)\t\n"
+"	fsinhx	fp3,fp3		| sinh(z.imag)\t\n"
+"	\t\n"
+"	fmulx	fp2,fp0		| result.real\t\n"
+"	fmoved	fp0,a1@		|\t\n"
+"	fmulx	fp3,fp1		| result.imag\t\n"
+"	fmoved	fp1,a1@(8)	|\t\n"
+);	/* end asm	*/
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -186,18 +186,18 @@
 	movel	a0@,a1@(8)
 	movel	a0@,a1@(12)
 ");	/* end asm	*/
-#endif	sfp004
+#endif /* sfp004 */
 
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
-__asm("
-	pea	_funcname
-	jmp	c_err_check
-");	/* end asm	*/
-# else  ERROR_CHECK
+__asm(
+"	pea	_funcname\t\n"
+"	jmp	c_err_check\t\n"
+);	/* end asm	*/
+# else /* ERROR_CHECK */
 
 __asm("rts");
 
-# endif ERROR_CHECK
+# endif /* ERROR_CHECK */
 #endif defined (__M68881__) || defined (sfp004)
diff -aurN pml-2.03/pmlsrc/cdiv.c pml-2.03-mint-20110207/pmlsrc/cdiv.c
--- pml-2.03/pmlsrc/cdiv.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cdiv.c	2011-02-07 22:54:57.234375000 +0100
@@ -92,7 +92,7 @@
 	xcpt.name = "cdiv";
 	xcpt.arg1 = denom;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s:  ZERO_CMPLX_DENOMINATOR \n", xcpt.name);
+	    //fprintf (stderr, "%s:  ZERO_CMPLX_DENOMINATOR \n", xcpt.name);
 	    xcpt.retval = 0.0;	/* useless in this context */
 	    errno = ERANGE;	/* should be EDOM if real or imag == 0	*/
 	}
@@ -102,53 +102,53 @@
 	if( result.imag >= 0.0) result.imag = HUGE_VAL;
 					/* still wrong, == 0 should yield NAN */
 	else			result.imag = -HUGE_VAL;	
-#else	ERROR_CHECK
+#else /* ERROR_CHECK */
 	result.real /= denom;
 	result.imag /= denom;
-#endif	ERROR_CHECK
+#endif /* ERROR_CHECK */
     } else {
 	result.real /= denom;
 	result.imag /= denom;
     }
     return (result);
 }
-#endif !defined (__M68881__) && !defined (sfp004)
+#endif /* !defined (__M68881__) #endif !defined (__M68881__) && !defined (sfp004)#endif !defined (__M68881__) && !defined (sfp004) !defined (sfp004) */
 #ifdef	__M68881__
-__asm("
-.text
-.even
-_funcname:
-	.ascii	\"cdiv\\0\"
-	.even
-
-.globl	_cdiv
-_cdiv:
-	fmoved	sp@(4),fp0
-	fmoved	sp@(12),fp1
-	fmoved	sp@(20),fp2
-	fmoved	sp@(28),fp3
-	fmovex	fp0,fp4
-	movel	a1,d0		| pointer to result
-
-	fmovex	fp2,fp5
-	fmulx	fp2,fp5
-	fmovex	fp3,fp6
-	fmulx	fp3,fp6
-	faddx	fp6,fp5
-
-	fmulx	fp2,fp4
-	fmulx	fp3,fp0
-	fmulx	fp1,fp2	
-	fmulx	fp1,fp3
-	faddx	fp3,fp4
-	fdivx	fp5,fp4
-	fsubx	fp0,fp2
-	fdivx	fp5,fp2
-
-	fmoved	fp4,a1@
-	fmoved	fp2,a1@(8)
-");	/* end asm	*/
-#endif	__M68881__
+__asm(
+".text\t\n"
+".even\t\n"
+"_funcname:\t\n"
+"	.ascii	\"cdiv\\0\"\t\n"
+"	.even\t\n"
+"\t\n"
+".globl	_cdiv\t\n"
+"_cdiv:\t\n"
+"	fmoved	sp@(4),fp0\t\n"
+"	fmoved	sp@(12),fp1\t\n"
+"	fmoved	sp@(20),fp2\t\n"
+"	fmoved	sp@(28),fp3\t\n"
+"	fmovex	fp0,fp4\t\n"
+"	movel	a1,d0		| pointer to result\t\n"
+"\t\n"
+"	fmovex	fp2,fp5\t\n"
+"	fmulx	fp2,fp5\t\n"
+"	fmovex	fp3,fp6\t\n"
+"	fmulx	fp3,fp6\t\n"
+"	faddx	fp6,fp5\t\n"
+"\t\n"
+"	fmulx	fp2,fp4\t\n"
+"	fmulx	fp3,fp0\t\n"
+"	fmulx	fp1,fp2	\t\n"
+"	fmulx	fp1,fp3\t\n"
+"	faddx	fp3,fp4\t\n"
+"	fdivx	fp5,fp4\t\n"
+"	fsubx	fp0,fp2\t\n"
+"	fdivx	fp5,fp2\t\n"
+"\t\n"
+"	fmoved	fp4,a1@\t\n"
+"	fmoved	fp2,a1@(8)\t\n"
+);	/* end asm	*/
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -250,19 +250,19 @@
 	movel	a0@,a1@(8)
 	movel	a0@,a1@(12)
 ");	/* end asm	*/
-#endif	sfp004
+#endif /* sfp004 */
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
 
-__asm("	
-	pea	_funcname
-	jmp	c_err_check
-");	/* end asm	*/
+__asm(
+"	pea	_funcname\t\n"
+"	jmp	c_err_check\t\n"
+);	/* end asm	*/
 
-# else  ERROR_CHECK
+# else /* ERROR_CHECK */
 
 __asm("rts");
 
-# endif ERROR_CHECK
+# endif /* ERROR_CHECK */
 #endif defined (__M68881__) || defined (sfp004)
diff -aurN pml-2.03/pmlsrc/cerr.cpp pml-2.03-mint-20110207/pmlsrc/cerr.cpp
--- pml-2.03/pmlsrc/cerr.cpp	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cerr.cpp	2011-02-07 22:54:57.234375000 +0100
@@ -70,7 +70,7 @@
 #endif	__MSHORT__
 error_exit:
 	pea	__iob+52	|
-	jbsr	_fprintf	|
+	//jbsr	_fprintf	|
 	addqw	#8,a7		| leave _funcname on stack
 	moveml	a7@+,d0/a1
 	bra	continue
@@ -115,7 +115,7 @@
 
 error_exit_i:
 	pea	__iob+52	|
-	jbsr	_fprintf	|
+	//jbsr	_fprintf	|
 	addqw	#8,a7		|
 	moveml	a7@+,d0/a1
 
diff -aurN pml-2.03/pmlsrc/cerr.s pml-2.03-mint-20110207/pmlsrc/cerr.s
--- pml-2.03/pmlsrc/cerr.s	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cerr.s	2011-02-07 22:54:57.250000000 +0100
@@ -50,7 +50,7 @@
 	pea	Domain		| for printf
 error_exit:
 	pea	__iob+52	|
-	jbsr	_fprintf	|
+	//jbsr	_fprintf	|
 	addqw	#8,a7		| leave _funcname on stack
 	moveml	a7@+,d0/a1
 	bra	continue
@@ -74,7 +74,7 @@
 	pea	Domain		| for printf
 error_exit_i:
 	pea	__iob+52	|
-	jbsr	_fprintf	|
+	//jbsr	_fprintf	|
 	addw	#12,a7		|
 	moveml	a7@+,d0/a1
 
diff -aurN pml-2.03/pmlsrc/cexp.c pml-2.03-mint-20110207/pmlsrc/cexp.c
--- pml-2.03/pmlsrc/cexp.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cexp.c	2011-02-07 22:54:57.250000000 +0100
@@ -83,36 +83,36 @@
 
 #else	!defined (__M68881__) && !defined (sfp004)
 #ifdef	ERROR_CHECK
-__asm("
-.text
-.even
-_funcname:
-	.ascii \"cexp\\0\"
-	.even
-");
-#endif	ERROR_CHECK
+__asm(
+".text\t\n"
+".even\t\n"
+"_funcname:\t\n"
+"	.ascii \"cexp\\0\"\t\n"
+"	.even\t\n"
+);
+#endif /* ERROR_CHECK */
 #endif	!defined (__M68881__) && !defined (sfp004)
 
 #ifdef	__M68881__
 
-__asm("
-	.text 
-	.even
-	.globl _cexp
-_cexp:
-	fmovex	fp2,sp@-	| 12 Bytes
-	movel	a1,d0		| save a1 as return value
-	fetoxd	a7@(16),fp0	| exp( z.real )
-	fmoved	a7@(24),fp2
-	fcosx	fp2,fp1
-	fsinx	fp2,fp2
-	fmulx	fp0,fp1		|
-	fmulx	fp0,fp2		|
-	fmoved	fp1,a1@		| fetch result.real
-	fmoved	fp2,a1@(8)	| fetch result.imag
-	fmovex	sp@+,fp2
-");	/* end asm	*/
-#endif	__M68881__
+__asm(
+"	.text\t\n"
+"	.even\t\n"
+"	.globl _cexp\t\n"
+"_cexp:\t\n"
+"	fmovex	fp2,sp@-	| 12 Bytes\t\n"
+"	movel	a1,d0		| save a1 as return value\t\n"
+"	fetoxd	a7@(16),fp0	| exp( z.real )\t\n"
+"	fmoved	a7@(24),fp2\t\n"
+"	fcosx	fp2,fp1\t\n"
+"	fsinx	fp2,fp2\t\n"
+"	fmulx	fp0,fp1		|\t\n"
+"	fmulx	fp0,fp2		|\t\n"
+"	fmoved	fp1,a1@		| fetch result.real\t\n"
+"	fmoved	fp2,a1@(8)	| fetch result.imag\t\n"
+"	fmovex	sp@+,fp2\t\n"
+);	/* end asm	*/
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -181,18 +181,18 @@
 	movel	a0@(zahl),a1@(8)
 	movel	a0@(zahl),a1@(12)
 ");	/* end asm	*/
-#endif	sfp004
+#endif /* sfp004 */
 
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
-__asm("
-	pea	_funcname
-	jmp	c_err_check
-");	/* end asm	*/
-# else  ERROR_CHECK
+__asm(
+"	pea	_funcname\t\n"
+"	jmp	c_err_check\t\n"
+);	/* end asm	*/
+# else /* ERROR_CHECK */
 
 __asm("rts");
 
-# endif ERROR_CHECK
+# endif /* ERROR_CHECK */
 #endif defined (__M68881__) || defined (sfp004)
diff -aurN pml-2.03/pmlsrc/cmult.c pml-2.03-mint-20110207/pmlsrc/cmult.c
--- pml-2.03/pmlsrc/cmult.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cmult.c	2011-02-07 22:54:57.265625000 +0100
@@ -79,36 +79,36 @@
 
     return (result);
 }
-#endif !defined (__M68881__) && !defined (sfp004)
+#endif /* !defined (__M68881__) #endif !defined (__M68881__) && !defined (sfp004)#endif !defined (__M68881__) && !defined (sfp004) !defined (sfp004) */
 #ifdef	__M68881__
-__asm("
-.text
-.even
-_funcname:
-	.ascii	\"cmult\\0\"
-	.even
-
-.globl	_cmult
-_cmult:
-	fmoved	sp@(4),fp0
-	fmoved	sp@(12),fp1
-	fmoved	sp@(20),fp2
-	fmoved	sp@(28),fp3
-	fmovex	fp0,fp4
-	movel	a1,d0		| pointer to result
-
-	fmulx	fp2,fp4
-	fmulx	fp3,fp0
-	fmulx	fp1,fp2
-	fmulx	fp1,fp3
-
-	fsubx	fp3,fp4
-	faddx	fp0,fp2
-
-	fmoved	fp4,a1@
-	fmoved	fp2,a1@(8)
-");	/* end asm	*/
-#endif	__M68881__
+__asm(
+".text\t\n"
+".even\t\n"
+"_funcname:\t\n"
+"	.ascii	\"cmult\\0\"\t\n"
+"	.even\t\n"
+"\t\n"
+".globl	_cmult\t\n"
+"_cmult:\t\n"
+"	fmoved	sp@(4),fp0\t\n"
+"	fmoved	sp@(12),fp1\t\n"
+"	fmoved	sp@(20),fp2\t\n"
+"	fmoved	sp@(28),fp3\t\n"
+"	fmovex	fp0,fp4\t\n"
+"	movel	a1,d0		| pointer to result\t\n"
+"\t\n"
+"	fmulx	fp2,fp4\t\n"
+"	fmulx	fp3,fp0\t\n"
+"	fmulx	fp1,fp2\t\n"
+"	fmulx	fp1,fp3\t\n"
+"\t\n"
+"	fsubx	fp3,fp4\t\n"
+"	faddx	fp0,fp2\t\n"
+"\t\n"
+"	fmoved	fp4,a1@\t\n"
+"	fmoved	fp2,a1@(8)\t\n"
+);	/* end asm	*/
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -185,19 +185,19 @@
 	movel	a0@,a1@(8)
 	movel	a0@,a1@(12)
 ");	/* end asm	*/
-#endif	sfp004
+#endif /* sfp004 */
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
 
-__asm("	
-	pea	_funcname
-	jmp	c_err_check
-");	/* end asm	*/
+__asm(
+"	pea	_funcname\t\n"
+"	jmp	c_err_check\t\n"
+);	/* end asm	*/
 
-# else  ERROR_CHECK
+# else /* ERROR_CHECK */
 
 __asm("rts");
 
-# endif ERROR_CHECK
+# endif /* ERROR_CHECK */
 #endif defined (__M68881__) || defined (sfp004)
diff -aurN pml-2.03/pmlsrc/cos.c pml-2.03-mint-20110207/pmlsrc/cos.c
--- pml-2.03/pmlsrc/cos.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cos.c	2011-02-07 22:54:57.281250000 +0100
@@ -194,116 +194,116 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"cos: %s error\\n\\0\"
-.even
-| pml compatible cosgent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
-#endif	ERROR_CHECK
-
-__asm("
-.even
-	.globl _cos
-_cos:
-");	/* end asm	*/
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"cos: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| pml compatible cosgent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
+#endif /* ERROR_CHECK */
+
+__asm(
+".even\t\n"
+"	.globl _cos\t\n"
+"_cos:\t\n"
+);	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fcosd	a7@(4), fp0	| cos
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	fcosd	a7@(4), fp0	| cos\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
-    __asm("
-	lea	0xfffa50,a0
-	movew	#0x541d,a0@(comm)	| specify function
-	cmpiw	#0x8900,a0@(resp)	| check
-	movel	a7@(4),a0@		| load arg_hi
-	movel	a7@(8),a0@		| load arg_low
-	movew	#0x7400,a0@(comm)	| result to d0
-	.long	0x0c688900, 0xfff067f8	| wait
-	movel	a0@,d0
-	movel	a0@,d1
-    ");	/* end asm	*/
+    __asm(
+"	lea	0xfffa50,a0\t\n"
+"	movew	#0x541d,a0@(comm)	| specify function\t\n"
+"	cmpiw	#0x8900,a0@(resp)	| check\t\n"
+"	movel	a7@(4),a0@		| load arg_hi\t\n"
+"	movel	a7@(8),a0@		| load arg_low\t\n"
+"	movew	#0x7400,a0@(comm)	| result to d0\t\n"
+"	.long	0x0c688900, 0xfff067f8	| wait\t\n"
+"	movel	a0@,d0\t\n"
+"	movel	a0@,d1\t\n"
+    );	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 __asm("rts");
 # endif	ERROR_CHECK
diff -aurN pml-2.03/pmlsrc/cosh.c pml-2.03-mint-20110207/pmlsrc/cosh.c
--- pml-2.03/pmlsrc/cosh.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/cosh.c	2011-02-07 22:54:57.281250000 +0100
@@ -83,7 +83,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: OVERFLOW error\n", funcname);
+	    //fprintf (stderr, "%s: OVERFLOW error\n", funcname);
 	    errno = ERANGE;
 	    xcpt.retval = MAXDOUBLE;
 	}
@@ -92,7 +92,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: UNDERFLOW error\n", funcname);
+	    //fprintf (stderr, "%s: UNDERFLOW error\n", funcname);
 	    errno = ERANGE;
 	    xcpt.retval = MINDOUBLE;
 	}
@@ -112,66 +112,66 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"cosh: %s error\\n\\0\"
-.even
-| pml compatible coshgent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-    ");	/* end asm	*/
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"cosh: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| pml compatible coshgent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+    );	/* end asm	*/
 # endif	ERROR_CHECK
 
-__asm("
-.even
-	.globl _cosh
-_cosh:
-    ");	/* end asm	*/
+__asm(
+".even\t\n"
+"	.globl _cosh\t\n"
+"_cosh:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fcoshd	a7@(4), fp0	| cosh
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	fcoshd	a7@(4), fp0	| cosh\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -185,71 +185,71 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 
 __asm("rts");
diff -aurN pml-2.03/pmlsrc/crcp.c pml-2.03-mint-20110207/pmlsrc/crcp.c
--- pml-2.03/pmlsrc/crcp.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/crcp.c	2011-02-07 22:54:57.296875000 +0100
@@ -79,7 +79,7 @@
 	xcpt.name = "crcp";
 	xcpt.arg1 = denom;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: ZERO_CMPLX_DENOMINATOR \n", xcpt.name);
+	    //fprintf (stderr, "%s: ZERO_CMPLX_DENOMINATOR \n", xcpt.name);
 	    errno = ERANGE;
 	    xcpt.retval = 0.0;	/* useless in this context */
 	}
diff -aurN pml-2.03/pmlsrc/csin.c pml-2.03-mint-20110207/pmlsrc/csin.c
--- pml-2.03/pmlsrc/csin.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/csin.c	2011-02-07 22:54:57.296875000 +0100
@@ -76,39 +76,39 @@
     result.imag = cos (z.real) * sinh (z.imag);
     return (result);
 }
-#endif !defined (__M68881__) && !defined (sfp004)
+#endif /* !defined (__M68881__) #endif !defined (__M68881__) && !defined (sfp004)#endif !defined (__M68881__) && !defined (sfp004) !defined (sfp004) */
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
-__asm("
-.text
-_funcname:
-	.ascii	\"csin\\0\"
-	.even
-");	/* end asm	*/
-# endif ERROR_CHECK
+__asm(
+".text\t\n"
+"_funcname:\t\n"
+"	.ascii	\"csin\\0\"\t\n"
+"	.even\t\n"
+);	/* end asm	*/
+# endif /* ERROR_CHECK */
 #endif defined (__M68881__) || defined (sfp004)
 
 #ifdef	__M68881__
-__asm("
-.text
-	.globl _csin
-_csin:
-	movel	a1,d0		| save a1 as return value
-	fmoved	sp@(4),fp0	| z.real
-	fcosx	fp0,fp1		| cos(z.real)
-	fsinx	fp0,fp0		| sin(z.real)
-
-	fmoved	sp@(12),fp3	| z.imag
-	fcoshx	fp3,fp2		| cosh(z.imag)
-	fsinhx	fp3,fp3		| sinh(z.imag)
-	
-	fmulx	fp2,fp0		| result.real
-	fmoved	fp0,a1@		|
-	fmulx	fp3,fp1		| result.imag
-	fmoved	fp1,a1@(8)	|
-");	/* end asm	*/
-#endif	__M68881__
+__asm(
+".text\t\n"
+"	.globl _csin\t\n"
+"_csin:\t\n"
+"	movel	a1,d0		| save a1 as return value\t\n"
+"	fmoved	sp@(4),fp0	| z.real\t\n"
+"	fcosx	fp0,fp1		| cos(z.real)\t\n"
+"	fsinx	fp0,fp0		| sin(z.real)\t\n"
+"\t\n"
+"	fmoved	sp@(12),fp3	| z.imag\t\n"
+"	fcoshx	fp3,fp2		| cosh(z.imag)\t\n"
+"	fsinhx	fp3,fp3		| sinh(z.imag)\t\n"
+"	\t\n"
+"	fmulx	fp2,fp0		| result.real\t\n"
+"	fmoved	fp0,a1@		|\t\n"
+"	fmulx	fp3,fp1		| result.imag\t\n"
+"	fmoved	fp1,a1@(8)	|\t\n"
+);	/* end asm	*/
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -181,18 +181,18 @@
 	movel	a0@,a1@(8)
 	movel	a0@,a1@(12)
 ");	/* end asm	*/
-#endif	sfp004
+#endif /* sfp004 */
 
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
-__asm("
-	pea	_funcname
-	jmp	c_err_check
-");	/* end asm	*/
-# else  ERROR_CHECK
+__asm(
+"	pea	_funcname\t\n"
+"	jmp	c_err_check\t\n"
+);	/* end asm	*/
+# else /* ERROR_CHECK */
 
 __asm("rts");
 
-# endif ERROR_CHECK
+# endif /* ERROR_CHECK */
 #endif defined (__M68881__) || defined (sfp004)
diff -aurN pml-2.03/pmlsrc/csubt.c pml-2.03-mint-20110207/pmlsrc/csubt.c
--- pml-2.03/pmlsrc/csubt.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/csubt.c	2011-02-07 22:54:57.312500000 +0100
@@ -77,27 +77,27 @@
     z1.imag -= z2.imag;
     return (z1);
 }
-#endif !defined (__M68881__) && !defined (sfp004)
+#endif /* !defined (__M68881__) #endif !defined (__M68881__) && !defined (sfp004)#endif !defined (__M68881__) && !defined (sfp004) !defined (sfp004) */
 
 #ifdef	__M68881__
-__asm("
-.text
-.even
-_funcname:
-	.ascii	\"csubt\\0\"
-	.even
-
-.globl	_csubt
-_csubt:
-	fmoved	sp@(4),fp0
-	fsubd	sp@(20),fp0
-	fmoved	sp@(12),fp1
-	fsubd	sp@(28),fp1
-	movel	a1,d0		| pointer to result
-	fmoved	fp0,a1@		| return z.real
-	fmoved	fp1,a1@(8)	| return z.imag
-");	/* end asm	*/
-#endif	__M68881__
+__asm(
+".text\t\n"
+".even\t\n"
+"_funcname:\t\n"
+"	.ascii	\"csubt\\0\"\t\n"
+"	.even\t\n"
+"\t\n"
+".globl	_csubt\t\n"
+"_csubt:\t\n"
+"	fmoved	sp@(4),fp0\t\n"
+"	fsubd	sp@(20),fp0\t\n"
+"	fmoved	sp@(12),fp1\t\n"
+"	fsubd	sp@(28),fp1\t\n"
+"	movel	a1,d0		| pointer to result\t\n"
+"	fmoved	fp0,a1@		| return z.real\t\n"
+"	fmoved	fp1,a1@(8)	| return z.imag\t\n"
+);	/* end asm	*/
+#endif /* __M68881__ */
 
 #ifdef	sfp004
 __asm("
@@ -150,19 +150,19 @@
 	movel	a0@(zahl),a1@(8)
 	movel	a0@(zahl),a1@(12)
 ");	/* end asm	*/
-#endif	sfp004
+#endif /* sfp004 */
 
 #if defined (__M68881__) || defined (sfp004)
 # ifdef ERROR_CHECK	/* no error checking for now	*/
 
-__asm("	
-	pea	_funcname
-	jmp	c_err_check
-");	/* end asm	*/
+__asm(
+"	pea	_funcname\t\n"
+"	jmp	c_err_check\t\n"
+);	/* end asm	*/
 
-# else  ERROR_CHECK
+# else /* ERROR_CHECK */
 
 __asm("rts");
 
-# endif ERROR_CHECK
+# endif /* ERROR_CHECK */
 #endif defined (__M68881__) || defined (sfp004)
diff -aurN pml-2.03/pmlsrc/ctan.c pml-2.03-mint-20110207/pmlsrc/ctan.c
--- pml-2.03/pmlsrc/ctan.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/ctan.c	2011-02-07 22:54:57.328125000 +0100
@@ -78,7 +78,7 @@
 
     if (ccosz.real == 0.0 && ccosz.imag == 0.0) {
 #ifdef	ERROR_CHECK
-	fputs (stderr, " ctan: SINGULARITY\n");
+	//fputs (stderr, " ctan: SINGULARITY\n");
 	errno = ERANGE;		/* should be EDOM if csinz.real or csinz.imag == 0	*/
 
 	if( csinz.real >= 0.0)	z.real = HUGE_VAL;	
@@ -87,9 +87,9 @@
 	if( csinz.imag >= 0.0) 	z.imag = HUGE_VAL;
 					/* still wrong, == 0 should yield NAN */
 	else			z.imag = -HUGE_VAL;	
-#else	ERROR_CHECK
+#else /* ERROR_CHECK */
 	z = cdiv(csinz,ccosz);
-#endif	ERROR_CHECK
+#endif /* ERROR_CHECK */
     } else {
 	z = cdiv(csinz,ccosz);
     }
diff -aurN pml-2.03/pmlsrc/dabs.c pml-2.03-mint-20110207/pmlsrc/dabs.c
--- pml-2.03/pmlsrc/dabs.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/dabs.c	2011-02-07 22:54:57.328125000 +0100
@@ -53,20 +53,20 @@
  */
 #if !defined (OLD)	/* mjr++	*/
 
-__asm("
-.text
-.even
-.globl _dabs
-.globl _fabs
-
-_dabs:
-_fabs:
-	moveml	a7@(4),d0-d1
-	bclr	#31,d0
-	rts
-");
+__asm(
+".text\t\n"
+".even\t\n"
+".globl _dabs\t\n"
+".globl _fabs\t\n"
+"\t\n"
+"_dabs:\t\n"
+"_fabs:\t\n"
+"	moveml	a7@(4),d0-d1\t\n"
+"	bclr	#31,d0\t\n"
+"	rts\t\n"
+);
 
-#else OLD
+#else /* OLD */
 
 #include <stdio.h>
 #include <math.h>
@@ -117,4 +117,4 @@
 }
 #endif
 
-#endif OLD
+#endif /* OLD */
diff -aurN pml-2.03/pmlsrc/exp.c pml-2.03-mint-20110207/pmlsrc/exp.c
--- pml-2.03/pmlsrc/exp.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/exp.c	2011-02-07 22:54:57.343750000 +0100
@@ -201,7 +201,7 @@
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
             errno = ERANGE;
-	    fprintf (stderr, "%s: %sFLOW error\n", funcname, xcptstr);
+	    //fprintf (stderr, "%s: %sFLOW error\n", funcname, xcptstr);
 	}
     } else {
 	x *= LOG2E;
@@ -229,132 +229,132 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"exp: %s error\\n\\0\"
-.even
-
-| pml compatible expgent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
-#endif	ERROR_CHECK
-
-__asm("
-.even
-	.globl _exp
-_exp:
-");	/* end asm	*/
+    __asm(
+"\t\n"
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"exp: %s error\\n\\0\"\t\n"
+".even\t\n"
+"\t\n"
+"| pml compatible expgent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
+#endif /* ERROR_CHECK */
+
+__asm(
+".even\t\n"
+"	.globl _exp\t\n"
+"_exp:\t\n"
+);	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fetoxd	a7@(4), fp0	| exp
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	fetoxd	a7@(4), fp0	| exp\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
-    __asm("
-	lea	0xfffa50,a0
-	movew	#0x5410,a0@(comm)	| specify function
-	cmpiw	#0x8900,a0@(resp)	| check
-	movel	a7@(4),a0@		| load arg_hi
-	movel	a7@(8),a0@		| load arg_low
-	movew	#0x7400,a0@(comm)	| result to d0
-	.long	0x0c688900, 0xfff067f8	| wait
-	movel	a0@,d0
-	movel	a0@,d1
-    ");	/* end asm	*/
+    __asm(
+"	lea	0xfffa50,a0\t\n"
+"	movew	#0x5410,a0@(comm)	| specify function\t\n"
+"	cmpiw	#0x8900,a0@(resp)	| check\t\n"
+"	movel	a7@(4),a0@		| load arg_hi\t\n"
+"	movel	a7@(8),a0@		| load arg_low\t\n"
+"	movew	#0x7400,a0@(comm)	| result to d0\t\n"
+"	.long	0x0c688900, 0xfff067f8	| wait\t\n"
+"	movel	a0@,d0\t\n"
+"	movel	a0@,d1\t\n"
+    );	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 
 __asm("rts");
diff -aurN pml-2.03/pmlsrc/exp10.c pml-2.03-mint-20110207/pmlsrc/exp10.c
--- pml-2.03/pmlsrc/exp10.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/exp10.c	2011-02-07 22:54:57.343750000 +0100
@@ -24,66 +24,66 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
     __asm(".text; .even");
 
 #ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"exp10: %s error\\n\\0\"
-.even
-
-| pml compatible exp10gent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"exp10: %s error\\n\\0\"\t\n"
+".even\t\n"
+"\t\n"
+"| pml compatible exp10gent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
 # endif	ERROR_CHECK
 
-    __asm(".even
-	.globl _exp10
-_exp10:
-    ");	/* end asm	*/
+    __asm(".even\t\n"
+"	.globl _exp10\t\n"
+"_exp10:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	ftentoxd a7@(4), fp0	| ten_to_x
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	ftentoxd a7@(4), fp0	| ten_to_x\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -97,57 +97,57 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 # endif	ERROR_CHECK
 #endif /* __M68881__ || sfp004	*/
diff -aurN pml-2.03/pmlsrc/floor.c pml-2.03-mint-20110207/pmlsrc/floor.c
--- pml-2.03/pmlsrc/floor.c	1994-03-19 15:40:12.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/floor.c	2011-02-07 22:54:57.359375000 +0100
@@ -3,7 +3,7 @@
  * 	from pete housels posting
  */
 
-#if !defined (__M68881__) || !defined (sfp004)
+#if !defined (__M68881__) && !defined (sfp004)
 #if __STDC__
 double	modf(double, double *);
 #else
@@ -32,7 +32,7 @@
 }
 #endif
 
-#ifdef __M68881_
+#ifdef __M68881__
 
 double ceil (double x)
 {
@@ -76,7 +76,7 @@
 		  : "dmi" (rounding_mode));
   return value;
 }
-#endif __M68881__
+#endif /* __M68881__ */
 
 #ifdef	sfp004
-#endif	sfp004
+#endif /* sfp004 */
diff -aurN pml-2.03/pmlsrc/log.c pml-2.03-mint-20110207/pmlsrc/log.c
--- pml-2.03/pmlsrc/log.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/log.c	2011-02-07 22:54:57.375000000 +0100
@@ -275,67 +275,67 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"log: %s error\\n\\0\"
-.even
-
-| pml compatible log
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"log: %s error\\n\\0\"\t\n"
+".even\t\n"
+"\t\n"
+"| pml compatible log\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
 # endif	ERROR_CHECK
 
-    __asm("
-.even
-	.globl _log
-_log:
-    ");	/* end asm	*/
+    __asm(
+".even\t\n"
+"	.globl _log\t\n"
+"_log:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	flognd	a7@(4), fp0	| log
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	flognd	a7@(4), fp0	| log\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -349,71 +349,71 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 
 __asm("rts");
diff -aurN pml-2.03/pmlsrc/log10.c pml-2.03-mint-20110207/pmlsrc/log10.c
--- pml-2.03/pmlsrc/log10.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/log10.c	2011-02-07 22:54:57.390625000 +0100
@@ -88,67 +88,67 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"log10: %s error\\n\\0\"
-.even
-| pml compatible log
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-    ");	/* end asm	*/
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"log10: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| pml compatible log\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+    );	/* end asm	*/
 # endif	ERROR_CHECK
 
-    __asm("
-.even
-	.globl _log10
-_log10:
-    ");	/* end asm	*/
+    __asm(
+".even\t\n"
+"	.globl _log10\t\n"
+"_log10:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	flog10d	a7@(4), fp0	| log
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	flog10d	a7@(4), fp0	| log\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -162,71 +162,71 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 
 __asm("rts");
diff -aurN pml-2.03/pmlsrc/math.h pml-2.03-mint-20110207/pmlsrc/math.h
--- pml-2.03/pmlsrc/math.h	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/math.h	2011-02-07 22:57:14.750000000 +0100
@@ -1,5 +1,5 @@
 #ifndef _MATH_H
-#define _MATH_H
+#define _MATH_H 1
 
 /************************************************************************
  *									*
@@ -20,7 +20,6 @@
  ************************************************************************
  */
 
-
 /*
  *  FILE
  *
@@ -37,20 +36,23 @@
  *
  */
 
-
-#ifndef _COMPILER_H
-#include <compiler.h>
+#ifndef	_FEATURES_H
+# include <features.h>
 #endif
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#ifdef __TURBOC__
+__BEGIN_DECLS
 
-#include <tcmath.h>
+/* Get machine-dependent HUGE_VAL value (returned on overflow).
+   On all IEEE754 machines, this is +Infinity.  */
+#include <bits/huge_val.h>
+
+/* Get machine-dependent NAN value (returned for some domain errors).  */
+#ifdef	 __USE_ISOC99
+# include <bits/nan.h>
+#endif
+/* Get general and ISO C9X specific information.  */
+#include <bits/mathdef.h>
 
-#else
 
 #ifndef __STRICT_ANSI__
 /*
@@ -64,7 +66,6 @@
     double imag;			/* Imaginary part */
 } COMPLEX;
 
-/* exceptions ++jrb */
 typedef enum  {
     DOMAIN      = 1,
     SING        = 2,
@@ -74,43 +75,72 @@
     PLOSS       = 6
 } exception_type;
 
-struct exception {
+/* In C++ exception is a reserved word.  */
+#ifdef __cplusplus
+struct __exception
+#else
+struct exception 
+#endif
+{
 	exception_type	type;	/* exception type */
 	const char	*name;	/* function in which it occured */
 	double		arg1;	/* an arg */
 	double		arg2;	/* another arg */
 	double		retval; /* val to return */
 };
+#endif /* __STRICT_ANSI__ */
 
-#define M_LN2                0.69314718055994530942
-#define M_PI         3.14159265358979323846
-#define M_SQRT2              1.41421356237309504880
-#define M_E          2.7182818284590452354
-#define M_LOG2E              1.4426950408889634074
-#define M_LOG10E     0.43429448190325182765
-#define M_LN10               2.30258509299404568402
-#define M_PI_2               1.57079632679489661923
-#define M_PI_4               0.78539816339744830962
-#define M_1_PI               0.31830988618379067154
-#define M_2_PI               0.63661977236758134308
-#define M_2_SQRTPI   1.12837916709551257390
-#define M_SQRT1_2    0.70710678118654752440
 
-#endif /* __STRICT_ANSI__ */
+/* Some useful constants.  */
+#if defined __USE_BSD || defined __USE_XOPEN
+# define M_E		2.7182818284590452354	/* e */
+# define M_LOG2E	1.4426950408889634074	/* log_2 e */
+# define M_LOG10E	0.43429448190325182765	/* log_10 e */
+# define M_LN2		0.69314718055994530942	/* log_e 2 */
+# define M_LN10		2.30258509299404568402	/* log_e 10 */
+# define M_PI		3.14159265358979323846	/* pi */
+# define M_PI_2		1.57079632679489661923	/* pi/2 */
+# define M_PI_4		0.78539816339744830962	/* pi/4 */
+# define M_1_PI		0.31830988618379067154	/* 1/pi */
+# define M_2_PI		0.63661977236758134308	/* 2/pi */
+# define M_2_SQRTPI	1.12837916709551257390	/* 2/sqrt(pi) */
+# define M_SQRT2	1.41421356237309504880	/* sqrt(2) */
+# define M_SQRT1_2	0.70710678118654752440	/* 1/sqrt(2) */
+#endif
+
+/* The above constants are not adequate for computation using `long double's.
+   Therefore we provide as an extension constants with similar names as a
+   GNU extension.  Provide enough digits for the 128-bit IEEE quad.  */
+#ifdef __USE_GNU
+# define M_El		2.7182818284590452353602874713526625L  /* e */
+# define M_LOG2El	1.4426950408889634073599246810018922L  /* log_2 e */
+# define M_LOG10El	0.4342944819032518276511289189166051L  /* log_10 e */
+# define M_LN2l		0.6931471805599453094172321214581766L  /* log_e 2 */
+# define M_LN10l	2.3025850929940456840179914546843642L  /* log_e 10 */
+# define M_PIl		3.1415926535897932384626433832795029L  /* pi */
+# define M_PI_2l	1.5707963267948966192313216916397514L  /* pi/2 */
+# define M_PI_4l	0.7853981633974483096156608458198757L  /* pi/4 */
+# define M_1_PIl	0.3183098861837906715377675267450287L  /* 1/pi */
+# define M_2_PIl	0.6366197723675813430755350534900574L  /* 2/pi */
+# define M_2_SQRTPIl	1.1283791670955125738961589031215452L  /* 2/sqrt(pi) */
+# define M_SQRT2l	1.4142135623730950488016887242096981L  /* sqrt(2) */
+# define M_SQRT1_2l	0.7071067811865475244008443621048490L  /* 1/sqrt(2) */
+#endif
+
 
 extern const double _infinitydf;	/* in normdf.cpp */
 
 
-#if defined(__GNUC_INLINE__) && (!defined(NO_INLINE_MATH)) && (defined(_M68881) || defined(__M68881__))
+#ifndef _INLINE_MATH
+# if 0 /*defined(__GNUC_INLINE__) && (!defined(NO_INLINE_MATH)) && (defined(_M68881) || defined(__M68881__))*/
 #  define _INLINE_MATH 1
-#else
+# else
 #  define _INLINE_MATH 0
+# endif
 #endif
 
 #if _INLINE_MATH
-#  include <math-68881.h>
-#else
-#  define HUGE_VAL  (_infinitydf)
+# include <math-68881.h>
 #endif
 
 #define HUGE HUGE_VAL
@@ -124,82 +154,147 @@
 # endif
 #endif
 
+#ifdef __USE_BSD
+
+extern int finite(double) __THROW;
+extern int __finite(double) __THROW;
+extern int finitef(float) __THROW;
+extern int __finitef(float) __THROW;
+extern int finitel(long double) __THROW;
+extern int __finitel(long double) __THROW;
+
+extern int isinf (double) __THROW;
+extern int __isinf (double) __THROW;
+extern int isinff (float) __THROW;
+extern int __isinff (float) __THROW;
+extern int isinfl (long double) __THROW;
+extern int __isinfl (long double) __THROW;
+
+extern int isnan (double) __THROW;
+extern int __isnan (double) __THROW;
+extern int isnanf (float) __THROW;
+extern int __isnanf (float) __THROW;
+extern int isnanl (long double) __THROW;
+extern int __isnanl (long double) __THROW;
+
+extern int signbit (double) __THROW;
+extern int __signbit (double) __THROW;
+extern int signbitf (float) __THROW;
+extern int __signbitf (float) __THROW;
+extern int signbitl (long double) __THROW;
+extern int __signbitl (long double) __THROW;
+
+#endif
+
+/* Return nonzero value if sign of X is negative.  */
+# ifdef __NO_LONG_DOUBLE_MATH
+#  define signbit(x) \
+     (sizeof (x) == sizeof (float) ? __signbitf (x) : __signbit (x))
+# else
+#  define signbit(x) \
+     (sizeof (x) == sizeof (float)					      \
+      ? __signbitf (x)							      \
+      : sizeof (x) == sizeof (double)					      \
+      ? __signbit (x) : __signbitl (x))
+# endif
+
+/* Return nonzero value if X is not +-Inf or NaN.  */
+# ifdef __NO_LONG_DOUBLE_MATH
+#  define isfinite(x) \
+     (sizeof (x) == sizeof (float) ? __finitef (x) : __finite (x))
+# else
+#  define isfinite(x) \
+     (sizeof (x) == sizeof (float)					      \
+      ? __finitef (x)							      \
+      : sizeof (x) == sizeof (double)					      \
+      ? __finite (x) : __finitel (x))
+# endif
+
+/* Return nonzero value if X is a NaN.  We could use `fpclassify' but
+   we already have this functions `__isnan' and it is faster.  */
+# ifdef __NO_LONG_DOUBLE_MATH
+#  define isnan(x) \
+     (sizeof (x) == sizeof (float) ? __isnanf (x) : __isnan (x))
+# else
+#  define isnan(x) \
+     (sizeof (x) == sizeof (float)					      \
+      ? __isnanf (x)							      \
+      : sizeof (x) == sizeof (double)					      \
+      ? __isnan (x) : __isnanl (x))
+# endif
+
+/* Return nonzero value is X is positive or negative infinity.  */
+# ifdef __NO_LONG_DOUBLE_MATH
+#  define isinf(x) \
+     (sizeof (x) == sizeof (float) ? __isinff (x) : __isinf (x))
+# else
+#  define isinf(x) \
+     (sizeof (x) == sizeof (float)					      \
+      ? __isinff (x)							      \
+      : sizeof (x) == sizeof (double)					      \
+      ? __isinf (x) : __isinfl (x))
+# endif
+
+
 #if !_INLINE_MATH
-__EXTERN double sin	__PROTO((double));
-__EXTERN double cos	__PROTO((double));
-__EXTERN double tan	__PROTO((double));
-__EXTERN double asin	__PROTO((double));
-__EXTERN double	acos	__PROTO((double));
-__EXTERN double atan	__PROTO((double));
-__EXTERN double atan2	__PROTO((double, double));
-__EXTERN double sinh	__PROTO((double));
-__EXTERN double cosh	__PROTO((double));
-__EXTERN double tanh	__PROTO((double));
-__EXTERN double atanh	__PROTO((double));
-__EXTERN double exp	__PROTO((double));
-__EXTERN double log	__PROTO((double));
-__EXTERN double log10	__PROTO((double));
-__EXTERN double sqrt	__PROTO((double));
-__EXTERN double hypot   __PROTO((double, double));
-__EXTERN double pow	__PROTO((double, double));
-__EXTERN double fabs	__PROTO((double));
-__EXTERN double ceil	__PROTO((double));
-__EXTERN double floor	__PROTO((double));
-__EXTERN double rint	__PROTO((double));
-__EXTERN double fmod	__PROTO((double, double));
-
-__EXTERN double ldexp	__PROTO((double, int));
-__EXTERN double frexp	__PROTO((double, int *));
-__EXTERN double modf	__PROTO((double, double *));
+extern double sin (double) __THROW;
+extern double cos (double) __THROW;
+extern double tan (double) __THROW;
+extern double asin (double) __THROW;
+extern double acos (double) __THROW;
+extern double atan (double) __THROW;
+extern double atan2 (double, double) __THROW;
+extern double sinh (double) __THROW;
+extern double cosh (double) __THROW;
+extern double tanh (double) __THROW;
+extern double atanh (double) __THROW;
+extern double exp (double) __THROW;
+extern double log (double) __THROW;
+extern double log10 (double) __THROW;
+extern double sqrt (double) __THROW;
+extern double hypot (double, double) __THROW;
+extern double pow (double, double) __THROW;
+extern double fabs (double) __THROW;
+extern double ceil (double) __THROW;
+extern double floor (double) __THROW;
+extern double rint (double) __THROW;
+extern double fmod (double, double) __THROW;
+
+extern double ldexp (double, int) __THROW;
+extern double frexp (double, int *) __THROW;
+extern double modf (double, double *) __THROW;
 #endif
 
-__EXTERN double acosh	__PROTO((double));
-__EXTERN double asinh	__PROTO((double));
+extern double acosh (double) __THROW;
+extern double asinh (double) __THROW;
 
 #ifndef __STRICT_ANSI__
 
+#ifndef dabs
 #if _INLINE_MATH
-#  define dabs(x) fabs(x)
+# define dabs(x) fabs(x)
 #else
-__EXTERN double dabs	__PROTO((double));
+extern double dabs (double) __THROW;
+#endif
 #endif
 
-__EXTERN double copysign	__PROTO((double, double));
-__EXTERN int matherr	__PROTO((struct exception *));
-__EXTERN double cabs	__PROTO((COMPLEX));
-__EXTERN COMPLEX cmult	__PROTO((COMPLEX, COMPLEX));
-__EXTERN COMPLEX csqrt	__PROTO((COMPLEX));
-#ifndef __GNUG__
-__EXTERN COMPLEX clog	__PROTO((COMPLEX));
-#endif
-__EXTERN COMPLEX cacos	__PROTO((COMPLEX));
-__EXTERN COMPLEX cadd	__PROTO((COMPLEX,COMPLEX));
-__EXTERN COMPLEX casin	__PROTO((COMPLEX));
-__EXTERN COMPLEX catan	__PROTO((COMPLEX));
-__EXTERN COMPLEX ccosh	__PROTO((COMPLEX));
-__EXTERN COMPLEX crcp	__PROTO((COMPLEX));
-__EXTERN COMPLEX csinh	__PROTO((COMPLEX));
-__EXTERN COMPLEX ctan	__PROTO((COMPLEX));
-__EXTERN COMPLEX ctanh	__PROTO((COMPLEX));
-__EXTERN COMPLEX cexp	__PROTO((COMPLEX));
-__EXTERN COMPLEX ccos	__PROTO((COMPLEX));
-__EXTERN COMPLEX csin	__PROTO((COMPLEX));
-__EXTERN COMPLEX cdiv	__PROTO((COMPLEX, COMPLEX));
-__EXTERN COMPLEX csubt	__PROTO((COMPLEX,COMPLEX));
-
-__EXTERN int pmlcfs	__PROTO((int, int));
-__EXTERN int pmlcnt	__PROTO((void));
-__EXTERN int pmlerr	__PROTO((int));
-__EXTERN int pmllim	__PROTO((int));
-__EXTERN int pmlsfs	__PROTO((int, int));
-__EXTERN double poly	__PROTO((int, double *, double));
-
-#endif /* __STRICT_ANSI__ */
-
-#endif /* __TURBOC__ */
+extern double copysign (double, double) __THROW;
 
 #ifdef __cplusplus
-}
+extern int matherr (struct __exception *) throw();
+#else
+extern int matherr (struct exception *) __THROW;
 #endif
 
-#endif /* _MATH_H */
+extern int pmlcfs (int, int) __THROW;
+extern int pmlcnt (void) __THROW;
+extern int pmlerr (int) __THROW;
+extern int pmllim (int) __THROW;
+extern int pmlsfs (int, int) __THROW;
+extern double poly (int, double *, double) __THROW;
+
+#endif /* __STRICT_ANSI__ */
+
+__END_DECLS
+
+#endif /* math.h  */
diff -aurN pml-2.03/pmlsrc/mod.c pml-2.03-mint-20110207/pmlsrc/mod.c
--- pml-2.03/pmlsrc/mod.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/mod.c	2011-02-07 22:54:57.406250000 +0100
@@ -77,70 +77,70 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"fmod: %s error\\n\\0\"
-
-| pml compatible tangent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-    ");	/* end asm	*/
+    __asm(
+"\t\n"
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"fmod: %s error\\n\\0\"\t\n"
+"\t\n"
+"| pml compatible tangent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+    );	/* end asm	*/
 # endif	ERROR_CHECK
 
-    __asm(".even
-	.globl _fmod
-_fmod:
-    ");	/* end asm	*/
+    __asm(".even\t\n"
+"	.globl _fmod\t\n"
+"_fmod:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fmovex	fp0,sp@-	| 12 Bytes
-	fmoved	a7@(16), fp0	| value
-	fmodd	a7@(24),fp0	| base
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-	fmovex	sp@+,fp0
-    ");	/* end asm	*/
+    __asm(
+"	fmovex	fp0,sp@-	| 12 Bytes\t\n"
+"	fmoved	a7@(16), fp0	| value\t\n"
+"	fmodd	a7@(24),fp0	| base\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+"	fmovex	sp@+,fp0\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -158,70 +158,71 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 
 __asm("rts");
@@ -242,7 +243,7 @@
 	xcpt.arg1 = base;
 	xcpt.type = DOMAIN;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: ZERO DIVIDE error\n", "fmod");
+	    //fprintf (stderr, "%s: ZERO DIVIDE error\n", "fmod");
 	    errno = EDOM;
 	}
     } else {
@@ -253,4 +254,4 @@
     }
     return xcpt.retval;
 }
-#endif m68881
+#endif /* m68881 */
diff -aurN pml-2.03/pmlsrc/pml.h pml-2.03-mint-20110207/pmlsrc/pml.h
--- pml-2.03/pmlsrc/pml.h	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/pml.h	2011-02-07 22:54:57.421875000 +0100
@@ -48,7 +48,7 @@
 
 #ifndef NO_DBUG
 # define NO_DBUG
-#endif NO_DBUG
+#endif /* NO_DBUG */
 
 #ifndef NO_DBUG
 #    include <dbug.h>
diff -aurN pml-2.03/pmlsrc/rint.c pml-2.03-mint-20110207/pmlsrc/rint.c
--- pml-2.03/pmlsrc/rint.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/rint.c	2011-02-07 22:54:57.421875000 +0100
@@ -64,7 +64,7 @@
 #endif 0
   return value;
 }
-#endif __M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
 __asm("
 
@@ -100,4 +100,4 @@
  	rts
 
 ");
-#endif	sfp004
+#endif /* sfp004 */
diff -aurN pml-2.03/pmlsrc/sign.c pml-2.03-mint-20110207/pmlsrc/sign.c
--- pml-2.03/pmlsrc/sign.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/sign.c	2011-02-07 22:54:57.437500000 +0100
@@ -84,21 +84,21 @@
     return (rtnval);
 }
 
-#else	OLD 	/* mjr: assembler version for  all machines */
-__asm("
-.text
-.even
-.globl _copysign
+#else /* OLD */ /* mjr: assembler version for  all machines */
+__asm(
+".text\t\n"
+".even\t\n"
+".globl _copysign\t\n"
+"\t\n"
+"_copysign:\t\n"
+"	moveml	a7@(4),d0-d1\t\n"
+"	btst	#31,a7@(12)\t\n"
+"	beq	clear\t\n"
+"	bset	#31,d0\t\n"
+"	rts\t\n"
+"clear:\t\n"
+"	bclr	#31,d0\t\n"
+"	rts\t\n"
+);	/* end asm	*/
 
-_copysign:
-	moveml	a7@(4),d0-d1
-	btst	#31,a7@(12)
-	beq	clear
-	bset	#31,d0
-	rts
-clear:
-	bclr	#31,d0
-	rts
-");	/* end asm	*/
-
-#endif	OLD
+#endif /* OLD */
diff -aurN pml-2.03/pmlsrc/sin.c pml-2.03-mint-20110207/pmlsrc/sin.c
--- pml-2.03/pmlsrc/sin.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/sin.c	2011-02-07 22:54:57.437500000 +0100
@@ -191,65 +191,65 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"sin: %s error\\n\\0\"
-.even
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-    ");	/* end asm	*/
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"sin: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+    );	/* end asm	*/
 # endif	ERROR_CHECK
 
-    __asm(".even
-.globl _sin
-_sin:
-    ");	/* end asm	*/
+    __asm(".even\t\n"
+".globl _sin\t\n"
+"_sin:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fsind	a7@(4), fp0	| sin
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	fsind	a7@(4), fp0	| sin\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -263,43 +263,43 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts
+    );
 # else	ERROR_CHECK
 
 __asm("rts");
diff -aurN pml-2.03/pmlsrc/sinh.c pml-2.03-mint-20110207/pmlsrc/sinh.c
--- pml-2.03/pmlsrc/sinh.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/sinh.c	2011-02-07 22:54:57.453125000 +0100
@@ -81,7 +81,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: OVERFLOW error\n", funcname);
+	    //fprintf (stderr, "%s: OVERFLOW error\n", funcname);
 	    errno = ERANGE;
 	    xcpt.retval = HUGE_VAL;
 	}
@@ -90,7 +90,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: UNDERFLOW error\n", funcname);
+	    //fprintf (stderr, "%s: UNDERFLOW error\n", funcname);
 	    errno = ERANGE;
 	    xcpt.retval = 0.0;
 	}
@@ -111,66 +111,66 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"sinh: %s error\\n\\0\"
-.even
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-    ");	/* end asm	*/
+    __asm(
+"\t\n"
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"sinh: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+    );	/* end asm	*/
 # endif	ERROR_CHECK
 
-    __asm(".even
-.globl _sinh
-_sinh:
-    ");	/* end asm	*/
+    __asm(".even\t\n"
+".globl _sinh\t\n"
+"_sinh:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fsinhd	a7@(4), fp0	| sinh
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-");	/* end asm	*/
+    __asm(
+"	fsinhd	a7@(4), fp0	| sinh\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+);	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -184,71 +184,71 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 
 __asm("rts");
diff -aurN pml-2.03/pmlsrc/sqrt.c pml-2.03-mint-20110207/pmlsrc/sqrt.c
--- pml-2.03/pmlsrc/sqrt.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/sqrt.c	2011-02-07 22:54:57.468750000 +0100
@@ -171,7 +171,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: DOMAIN error\n", funcname);
+	    //fprintf (stderr, "%s: DOMAIN error\n", funcname);
 	    errno = EDOM;
 	    xcpt.retval = 0.0;
 	}
@@ -221,67 +221,67 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"sqrt: %s error\\n\\0\"
-.even
-
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-    ");	/* end asm	*/
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"sqrt: %s error\\n\\0\"\t\n"
+".even\t\n"
+"\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+    );	/* end asm	*/
 # endif	ERROR_CHECK
 
-    __asm(".even
-.globl _hypot
-.globl _sqrt
-_sqrt:
-    ");	/* end asm	*/
+    __asm(".even\t\n"
+".globl _hypot\t\n"
+".globl _sqrt\t\n"
+"_sqrt:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	fsqrtd	a7@(4), fp0	| sqrt
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	fsqrtd	a7@(4), fp0	| sqrt\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -295,77 +295,77 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-err:
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"err:\t\n"
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+);
 # endif	ERROR_CHECK
-__asm("
-	rts
-
-.even
-_hypot:
-    ");
+__asm(
+"	rts\t\n"
+"\t\n"
+".even\t\n"
+"_hypot:\t\n"
+    );
 #endif /* __M68881__ || sfp004	*/
 #ifdef __M68881__
-__asm("
-	fmoved	a7@(4),fp0	|
-	fmulx	fp0,fp0		| x**2
-	fmoved	a7@(12),fp1	|
-	fmulx	fp1,fp1		| y**2
-	faddx	fp1,fp0		|
-	fsqrtx	fp0,fp0		| sqrt( x**2 + y**2 )
-	fmoved	fp0,a7@-	|
-	moveml	a7@+,d0-d1	| return arg
-");
-#endif	__M68881__
+__asm(
+"	fmoved	a7@(4),fp0	|\t\n"
+"	fmulx	fp0,fp0		| x**2\t\n"
+"	fmoved	a7@(12),fp1	|\t\n"
+"	fmulx	fp1,fp1		| y**2\t\n"
+"	faddx	fp1,fp0		|\t\n"
+"	fsqrtx	fp0,fp0		| sqrt( x**2 + y**2 )\t\n"
+"	fmoved	fp0,a7@-	|\t\n"
+"	moveml	a7@+,d0-d1	| return arg\t\n"
+);
+#endif /* __M68881__ */
 #ifdef	sfp004
 __asm("
 	lea	0xfffa50,a0
@@ -397,13 +397,13 @@
 	movel	a0@(zahl),d0
 	movel	a0@(zahl),d1
 ");
-#endif	sfp004
+#endif /* sfp004 */
 #if ( defined (__M68881__) || defined (sfp004) ) && defined (ERROR_CHECK)
 
 __asm("bra err");
 
-#else	ERROR_CHECK
+#else /* ERROR_CHECK */
 
 __asm("rts");
 
-#endif	ERROR_CHECK
+#endif /* ERROR_CHECK */
diff -aurN pml-2.03/pmlsrc/tan.c pml-2.03-mint-20110207/pmlsrc/tan.c
--- pml-2.03/pmlsrc/tan.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/tan.c	2011-02-07 22:54:57.468750000 +0100
@@ -77,7 +77,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: OVERFLOW error\n", funcname);
+	    //fprintf (stderr, "%s: OVERFLOW error\n", funcname);
 	    errno = ERANGE;
 	    if (sinx >= 0.0) {
 		xcpt.retval = HUGE_VAL;
@@ -102,66 +102,66 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
     __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"tan: %s error\\n\\0\"
-.even
-| pml compatible tangent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"tan: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| pml compatible tangent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
 # endif	ERROR_CHECK
 
-    __asm(".even
-.globl _tan
-_tan:
-    ");	/* end asm	*/
+    __asm(".even\t\n"
+".globl _tan\t\n"
+"_tan:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	ftand	a7@(4), fp0	| tan
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	ftand	a7@(4), fp0	| tan\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -175,71 +175,71 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	cmpw	a0@(24),d0	| == + Infinity ?
-	beq	error_plus	|
-	cmpw	a0@(32),d0	| == - Infinity ?
-	beq	error_minus	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	cmpw	a0@(24),d0	| == + Infinity ?\t\n"
+"	beq	error_plus	|\t\n"
+"	cmpw	a0@(32),d0	| == - Infinity ?\t\n"
+"	beq	error_minus	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movel	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_minus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| errno = ERANGE
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_plus:
-	swap	d0
-	moveml	d0-d1,a7@-
-	movew	#63,_errno	| NAN => errno = EDOM
-	pea	_Overflow	| for printf
-	bra	error_exit	|
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_minus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| errno = ERANGE\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_plus:\t\n"
+"	swap	d0\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#63,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Overflow	| for printf\t\n"
+"	bra	error_exit	|\t\n"
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 __asm("rts");
 # endif	ERROR_CHECK
diff -aurN pml-2.03/pmlsrc/tanh.c pml-2.03-mint-20110207/pmlsrc/tanh.c
--- pml-2.03/pmlsrc/tanh.c	1994-03-19 15:40:14.000000000 +0100
+++ pml-2.03-mint-20110207/pmlsrc/tanh.c	2011-02-07 22:54:57.484375000 +0100
@@ -87,7 +87,7 @@
 	xcpt.name = funcname;
 	xcpt.arg1 = x;
 	if (!matherr (&xcpt)) {
-	    fprintf (stderr, "%s: PLOSS error\n", funcname);
+	    //fprintf (stderr, "%s: PLOSS error\n", funcname);
 	    errno = ERANGE;
 	    if (positive) {
 		xcpt.retval = 1.0;
@@ -111,66 +111,66 @@
 
 ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 
    __asm(".text; .even");
 
 # ifdef	ERROR_CHECK
 
-    __asm("
-
-_Overflow:
-	.ascii \"OVERFLOW\\0\"
-_Domain:
-	.ascii \"DOMAIN\\0\"
-_Error_String:
-	.ascii \"tanh: %s error\\n\\0\"
-.even
-| pml compatible tanhgent
-| m.ritzert 7.12.1991
-| ritzert@dfg.dbp.de
-|
-|    /* NAN  = {7fffffff,ffffffff}		*/
-|    /* +Inf = {7ff00000,00000000}		*/
-|    /* -Inf = {fff00000,00000000}		*/
-|    /* MAX_D= {7fee42d1,30773b76}		*/
-|    /* MIN_D= {ffee42d1,30773b76}		*/
-
-.even
-double_max:
-	.long	0x7fee42d1
-	.long	0x30273b76
-double_min:
-	.long	0xffee42d1
-	.long	0x30273b76
-NaN:
-	.long	0x7fffffff
-	.long	0xffffffff
-p_Inf:
-	.long	0x7ff00000
-	.long	0x00000000
-m_Inf:
-	.long	0xfff00000
-	.long	0x00000000
-");
-#endif	ERROR_CHECK
-
-    __asm(".even
-.globl _tanh
-_tanh:
-    ");	/* end asm	*/
+    __asm(
+"\t\n"
+"_Overflow:\t\n"
+"	.ascii \"OVERFLOW\\0\"\t\n"
+"_Domain:\t\n"
+"	.ascii \"DOMAIN\\0\"\t\n"
+"_Error_String:\t\n"
+"	.ascii \"tanh: %s error\\n\\0\"\t\n"
+".even\t\n"
+"| pml compatible tanhgent\t\n"
+"| m.ritzert 7.12.1991\t\n"
+"| ritzert@dfg.dbp.de\t\n"
+"|\t\n"
+"|    /* NAN  = {7fffffff,ffffffff}		*/\t\n"
+"|    /* +Inf = {7ff00000,00000000}		*/\t\n"
+"|    /* -Inf = {fff00000,00000000}		*/\t\n"
+"|    /* MAX_D= {7fee42d1,30773b76}		*/\t\n"
+"|    /* MIN_D= {ffee42d1,30773b76}		*/\t\n"
+"\t\n"
+".even\t\n"
+"double_max:\t\n"
+"	.long	0x7fee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"double_min:\t\n"
+"	.long	0xffee42d1\t\n"
+"	.long	0x30273b76\t\n"
+"NaN:\t\n"
+"	.long	0x7fffffff\t\n"
+"	.long	0xffffffff\t\n"
+"p_Inf:\t\n"
+"	.long	0x7ff00000\t\n"
+"	.long	0x00000000\t\n"
+"m_Inf:\t\n"
+"	.long	0xfff00000\t\n"
+"	.long	0x00000000\t\n"
+);
+#endif /* ERROR_CHECK */
+
+    __asm(".even\t\n"
+".globl _tanh\t\n"
+"_tanh:\t\n"
+    );	/* end asm	*/
 
 #endif	/* __M68881__ || sfp004	*/
 #ifdef	__M68881__
 
-    __asm("
-	ftanhd	a7@(4), fp0	| tanh
-	fmoved	fp0,a7@-	| push result
-	moveml	a7@+,d0-d1	| return_value
-    ");	/* end asm	*/
+    __asm(
+"	ftanhd	a7@(4), fp0	| tanh\t\n"
+"	fmoved	fp0,a7@-	| push result\t\n"
+"	moveml	a7@+,d0-d1	| return_value\t\n"
+    );	/* end asm	*/
 
-#endif	__M68881__
+#endif /* __M68881__ */
 #ifdef	sfp004
     __asm("
 	lea	0xfffa50,a0
@@ -184,43 +184,43 @@
 	movel	a0@,d1
     ");	/* end asm	*/
 
-#endif	sfp004
+#endif /* sfp004 */
 #if defined (__M68881__) || defined (sfp004)
 # ifdef	ERROR_CHECK
-    __asm("
-	lea	double_max,a0	|
-	swap	d0		| exponent into lower word
-	cmpw	a0@(16),d0	| == NaN ?
-	beq	error_nan	|
-	swap	d0		| result ok,
-	rts			| restore d0
-");
+    __asm(
+"	lea	double_max,a0	|\t\n"
+"	swap	d0		| exponent into lower word\t\n"
+"	cmpw	a0@(16),d0	| == NaN ?\t\n"
+"	beq	error_nan	|\t\n"
+"	swap	d0		| result ok,\t\n"
+"	rts			| restore d0\t\n"
+);
 #ifndef	__MSHORT__
-__asm("
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movel	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movel	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #else	__MSHORT__
-__asm("
-error_nan:
-	moveml	a0@(24),d0-d1	| result = +inf
-	moveml	d0-d1,a7@-
-	movew	#62,_errno	| NAN => errno = EDOM
-	pea	_Domain		| for printf
-");
+__asm(
+"error_nan:\t\n"
+"	moveml	a0@(24),d0-d1	| result = +inf\t\n"
+"	moveml	d0-d1,a7@-\t\n"
+"	movew	#62,_errno	| NAN => errno = EDOM\t\n"
+"	pea	_Domain		| for printf\t\n"
+);
 #endif	__MSHORT__
-__asm("
-error_exit:
-	pea	_Error_String	|
-	pea	__iob+52	|
-	jbsr	_fprintf	|
-	addl	#12,a7		|
-	moveml	a7@+,d0-d1
-	rts
-    ");
+__asm(
+"error_exit:\t\n"
+"	pea	_Error_String	|\t\n"
+"	pea	__iob+52	|\t\n"
+//"	jbsr	_fprintf	|\t\n"
+"	addl	#12,a7		|\t\n"
+"	moveml	a7@+,d0-d1\t\n"
+"	rts\t\n"
+    );
 # else	ERROR_CHECK
 
 __asm("rts");
diff -aurN pml-2.03/pmltests/Makefile pml-2.03-mint-20110207/pmltests/Makefile
--- pml-2.03/pmltests/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ pml-2.03-mint-20110207/pmltests/Makefile	2011-02-07 22:54:57.500000000 +0100
@@ -0,0 +1,28 @@
+CC = gcc
+CFLAGS =	-DNO_DBUG -O -I../pmlsrc
+LIBS =		-lm -v
+
+all :		d2d.tos dd2d.tos c2d.tos c2c.tos cc2c.tos
+
+d2d.tos :	d2d.o
+		$(CC) -o d2d.tos d2d.o $(LIBS)
+
+dd2d.tos :	dd2d.o
+		$(CC) -o dd2d.tos dd2d.o $(LIBS)
+		
+c2d.tos :	c2d.o
+		$(CC) -o c2d.tos c2d.o $(LIBS)
+
+c2c.tos :	c2c.o
+		$(CC) -o c2c.tos c2c.o $(LIBS)
+		
+cc2c.tos :	cc2c.o
+		$(CC) -o cc2c.tos cc2c.o $(LIBS)
+		
+
+#
+#	Clean up the directory.
+#
+
+clean:
+	rm -f c2c.tos c2d.tos cc2c.tos d2d.tos dd2d.tos *.BAK *.bak *.tmp nohup.out *.o
